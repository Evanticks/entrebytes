<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Hexo • Posts by &#34;seguridad&#34; tag</title>
        <link>http://example.com</link>
        <description></description>
        <language>en</language>
        <pubDate>Thu, 26 Jan 2023 19:57:47 +0100</pubDate>
        <lastBuildDate>Thu, 26 Jan 2023 19:57:47 +0100</lastBuildDate>
        <category>Servicios de Red e Internet</category>
        <category>Sistemas Operativos</category>
        <category>Seguridad</category>
        <item>
            <guid isPermalink="true">http://example.com/2023/01/26/vpn-wireguard/</guid>
            <title>VPN Wireguard</title>
            <link>http://example.com/2023/01/26/vpn-wireguard/</link>
            <category>Seguridad</category>
            <pubDate>Thu, 26 Jan 2023 19:57:47 +0100</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img src=&#34;/images/logo-wireguard.png&#34; alt=&#34;wireguard-site-1.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;site-to-site&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#site-to-site&#34;&gt;#&lt;/a&gt; Site to Site&lt;/h1&gt;
&lt;h2 id=&#34;linux&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux&#34;&gt;#&lt;/a&gt; Linux&lt;/h2&gt;
&lt;p&gt;Primero vamos a cada cliente y vamos a establecer la ruta por defecto&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Cliente 1:
    sudo ip route del default
    sudo ip route add default via 192.168.200.1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Cliente 2:

    sudo ip route del default
    sudo ip route add default via 192.168.100.1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora nos conectarems a &lt;strong&gt;cada servidor&lt;/strong&gt; de manera que en cada uno realizaremos los siguientes comandos:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Instalamos wireguard
    sudo apt update
    sudo apt install wireguard
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Creamos la clave privada y pública&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wg genkey | sudo tee /etc/wireguard/server_private.key | wg pubkey | sudo tee /etc/wireguard/server_public.key&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat /etc/wireguard/server_private.key
cat /etc/wireguard/server_public.key
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;El resultado de los comandos será cada clave pública y privada de los servidores&lt;/p&gt;
&lt;p&gt;Creo el fichero de configuración en el que la interfaz se llamará wg0.conf&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo nano /etc/wireguard/wg0.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Después de esto en vpn1 quedará el archivo de configuración de la siguiente manera:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Interface]
Address = 10.99.99.1
PrivateKey = UKn7oartqeJjRPk8jUtACSTYn/e23wszOBxT/Ymo1Uk=
ListenPort = 51820

[Peer]
PublicKey = PWrfuUd1UODnjTPuFCJfy/eixRTEsCq/KioI74/vDFo=
AllowedIPs = 0.0.0.0/0
Endpoint = 10.0.0.1:51820
PersistentKeepAlive = 25

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;El siguiente archivo de configuración es el de vpn2:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Interface]
Address = 10.99.99.2
PrivateKey = MCL13K+q/43eyF8qLtBxz9cNhvcFxQ2s98LOiseZy3w=
ListenPort = 51820

[Peer]
PublicKey = 2az5T5rW/7x1Z/YLRfX7saNteaOsoupFh07Z6VkeUjI=
AllowedIPs = 0.0.0.0/0
Endpoint = 10.0.0.10:51820
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora en &lt;strong&gt;cada servidor&lt;/strong&gt; emplearemos&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wg-quick up wg0&lt;/code&gt;  para activar el servicio&lt;br&gt;
 &lt;code&gt;wg-quick down wg0&lt;/code&gt;  para desactivar el servicio&lt;br&gt;
 &lt;code&gt;wg&lt;/code&gt;  para poder ver el estado del servicio&lt;/p&gt;
&lt;p&gt;En los servidores hay que intercambiar las respectivas claves públicas e ingresarlo en PublicKey.&lt;br&gt;
Address es la ip del túnel que se va a asignar en cada extremo del servidor.&lt;br&gt;
AllowedIPs es las ip permitidas hacia el servidor&lt;br&gt;
Endpoint es la ip pública del servidor y el puerto que se ha configurado en el servidor opuesto.&lt;br&gt;
PersistentKeepAlive es el tiempo en el que se realizan las comprobaciones de conexión.&lt;/p&gt;
&lt;p&gt;Ahora entraremos a cada cliente y realizaremos la comprobación de que pueden conectarse:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/wireguard-site-1.png&#34; alt=&#34;wireguard-site-1.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;cliente-windows&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cliente-windows&#34;&gt;#&lt;/a&gt; Cliente Windows&lt;/h2&gt;
&lt;p&gt;Ahora vamos a proceder a conectar un segundo cliente windows:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/wireguard-site-2.png&#34; alt=&#34;wireguard-site-2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ahora cambiaremos la interfaz para establecer una ip estática:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/wireguard-site-3.png&#34; alt=&#34;wireguard-site-2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Una vez hecho esto probamos a hacer un ping para ver que podemos comunicarnos en remoto a través de la VPN&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/wireguard-site-4.png&#34; alt=&#34;wireguard-site-2.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;point-to-site&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#point-to-site&#34;&gt;#&lt;/a&gt; Point to Site&lt;/h1&gt;
&lt;p&gt;La misma configuración que en el site to site, solo que no activaremos el bit de forwarding en el cliente final ya que este mismo no hará de router.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Interface]
Address = 10.99.99.1
PrivateKey = 4GLQzZT6G/Oq69aAitajxl7ZRtzuV1cFrsI0j4Cqjk4=
ListenPort = 51820

[Peer]
Publickey = fKWBm53DKrAAukk6nssSZ0DuVy9jEBIRKbqOS22sdg8=
AllowedIPs = 0.0.0.0/0
PersistentKeepAlive = 25
Endpoint = 192.188.188.20:51820

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/images/vpn-cliente-C-lin.png&#34; alt=&#34;wireguard-site-1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Luego conectaremos la interfaz en windows como explicamos anteriormente y activaremos la configuración de la VPN como hemos hecho en linux, solo que esta vez su ip de la ruta será&lt;br&gt;
10.99.99.4/32&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/vpn-cliente-C-win2.png&#34; alt=&#34;wireguard-site-1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Finalmente copiamos la configuración en el servidor con la clave pública de la vpn de windows y de esta manera reiniciando el servicio con wg-quick down wg0 y wg-quick up wg0 ya tendremos la vpn funcionando.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Peer]
Publickey = I/Gj50Ue+qmv+a4Q+C1VcJ4VptBVnU3QfDgo//vq+Fw=
AllowedIPs = 0.0.0.0/0
PersistentKeepAlive = 25
Endpoint = 192.188.188.21:51820
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/images/vpn-cliente-C-win.png&#34; alt=&#34;wireguard-site-1.png&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2023/01/24/vpn/</guid>
            <title>Cliente-Servidor Openvpn</title>
            <link>http://example.com/2023/01/24/vpn/</link>
            <category>Seguridad</category>
            <pubDate>Tue, 24 Jan 2023 11:06:01 +0100</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img src=&#34;/images/vpn-logo.png&#34; alt=&#34;Descripción de la imagen&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;cliente-servidor-openvpn&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cliente-servidor-openvpn&#34;&gt;#&lt;/a&gt; Cliente-Servidor Openvpn&lt;/h1&gt;
&lt;h2 id=&#34;servidor&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#servidor&#34;&gt;#&lt;/a&gt; Servidor&lt;/h2&gt;
&lt;p&gt;Tendremos un escenario en vagrant en el cual constará de 3 máquinas, un cliente externo, el servidor vpn&lt;/p&gt;
&lt;p&gt;Entramos en el servidor vpn y haremos apt update, y después instalaremos openvpn que servirá tanto para el cliente como para el servidor.&lt;/p&gt;
&lt;p&gt;Activamos el bit de forwarding en  &lt;code&gt;/etc/sysctl.conf&lt;/code&gt;   net.ipv4.ip_forward=1&lt;br&gt;
Ejecutamos  &lt;code&gt;sudo sysctl -p&lt;/code&gt;  para que lea el archivo sysctl.conf&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo cp -r /usr/share/easy-rsa /etc/openvpn&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd /etc/openvpn/easy-rsa&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Activamos el servicio de infraestructura pública:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo ./easyrsa init-pki&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Tras esto generamos la entidad certificadora con su respectiva clave privada gracias al binario easyrsa.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./easyrsa build-ca&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ahora vamos a montar el servidor de certificaciones:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./easyrsa build-server-full server nopass&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Generamos parámetros de Diffie-Helman, el objetivo del algoritmo de cifrado Diffie-Hellman es lograr el intercambio de una clave secreta por medio de un canal inseguro como es internet. Para que este algoritmo funcione, los datos informáticos deben traducirse a números, lo cual es posible por medio de sistemas como el código ASCII, combinado con otros.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo ./easyrsa gen-dh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Generamos el par de claves del cliente:&lt;br&gt;
 &lt;code&gt;./easyrsa build-client-full clientevpn nopass&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ahora pasamos las claves al servidor cliente&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo cp -rp /etc/openvpn/easy-rsa/pki/&amp;#123;ca.crt,issued/clientevpn.crt,private/clientevpn.key&amp;#125; /home/vagrant/
cd /home/vagrant
sudo chown vagrant:vagrant &amp;#123;ca.crt,clientevpn.crt,clientevpn.key&amp;#125;
scp &amp;#123;ca.crt,clientevpn.crt,clientevpn.key&amp;#125; vagrant@vpn-cli:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora configuraremos los parámetros del servidor y sus saltos:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/openvpn/server/servidor.conf&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;port 1194
proto udp
dev tun


ca /etc/openvpn/easy-rsa/pki/ca.crt
cert /etc/openvpn/easy-rsa/pki/issued/server.crt
key /etc/openvpn/easy-rsa/pki/private/server.key
dh /etc/openvpn/easy-rsa/pki/dh.pem


topology subnet


server 9.8.7.0 255.255.255.0
ifconfig-pool-persist /var/log/openvpn/ipp.txt


push &amp;quot;route 192.168.0.0 255.255.255.0&amp;quot;


keepalive 10 120
cipher AES-256-CBC
persist-key
persist-tun
status /var/log/openvpn/openvpn-status.log
verb 3
explicit-exit-notify 1

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;sudo systemctl enable --now openvpn-server@servidor&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;cliente&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cliente&#34;&gt;#&lt;/a&gt; Cliente&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;sudo apt update
sudo apt install openvpn
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Movemos las claves al directorio de openvpn y le cambiamos el propietario:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo mv &amp;#123;ca.crt,clientevpn.crt,clientevpn.key&amp;#125; /etc/openvpn/client
sudo chown root: /etc/openvpn/client/*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora vamos a crear el fichero /etc/openvpn/client/cliente.conf&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;client
dev tun
proto udp

remote 192.22.23.1 1194
resolv-retry infinite
nobind

persist-key
persist-tun

ca /etc/openvpn/client/ca.crt
cert /etc/openvpn/client/clientevpn.crt
key /etc/openvpn/client/clientevpn.key

remote-cert-tls server
cipher AES-256-CBC
verb 3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;E iniciamos la el servicio de la configuración:&lt;/p&gt;
&lt;p&gt;sudo systemctl enable --now openvpn-client@cliente&lt;/p&gt;
&lt;h2 id=&#34;máquina-interna&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#máquina-interna&#34;&gt;#&lt;/a&gt; Máquina interna&lt;/h2&gt;
&lt;p&gt;Quitamos la ip de la ruta por defecto que viene en vagrant:&lt;/p&gt;
&lt;p&gt;sudo ip route del default&lt;/p&gt;
&lt;p&gt;Añadimos la ruta que creamos hacia la vpn:&lt;/p&gt;
&lt;p&gt;sudo ip route add default via 192.168.0.1&lt;/p&gt;
&lt;p&gt;comprobaciones&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/vpn-acceso-remoto-ssh-openvpn.png&#34; alt=&#34;Descripción de la imagen&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/traceroute-openvpn.png&#34; alt=&#34;Descripción de la imagen&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;site-to-site-openvpn&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#site-to-site-openvpn&#34;&gt;#&lt;/a&gt; Site-To-Site Openvpn&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;/images/vpn-site-esquema.png&#34; alt=&#34;Descripción de la imagen&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;servidor-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#servidor-2&#34;&gt;#&lt;/a&gt; Servidor&lt;/h2&gt;
&lt;p&gt;Entramos en el servidor vpn y haremos apt update, y después instalaremos openvpn que servirá tanto para el cliente como para el servidor.&lt;/p&gt;
&lt;p&gt;Activamos el bit de forwarding en  &lt;code&gt;/etc/sysctl.conf&lt;/code&gt;   net.ipv4.ip_forward=1&lt;br&gt;
Ejecutamos  &lt;code&gt;sudo sysctl -p&lt;/code&gt;  para que lea el archivo sysctl.conf&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo cp -r /usr/share/easy-rsa /etc/openvpn&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd /etc/openvpn/easy-rsa&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Activamos el servicio de infraestructura pública:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo ./easyrsa init-pki&lt;/code&gt; &lt;br&gt;
Tras esto generamos la entidad certificadora con su respectiva clave privada gracias al binario easyrsa.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./easyrsa build-ca&lt;/code&gt; &lt;br&gt;
Ahora vamos a montar el servidor de certificaciones:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./easyrsa build-server-full server nopass&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo ./easyrsa gen-dh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Generamos el par de claves del cliente:&lt;br&gt;
 &lt;code&gt;./easyrsa build-client-full clientevpn nopass&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ahora pasamos las claves al servidor cliente&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo cp -rp /etc/openvpn/easy-rsa/pki/&amp;#123;ca.crt,issued/clientevpn.crt,private/clientevpn.key&amp;#125; /home/vagrant/
cd /home/vagrant
sudo chown vagrant:vagrant &amp;#123;ca.crt,clientevpn.crt,clientevpn.key&amp;#125;
scp &amp;#123;ca.crt,clientevpn.crt,clientevpn.key&amp;#125; vagrant@vpn-cli:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A partir de aquí la configuración varía respecto a la parte de cliente-servidor:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dev tun
ifconfig 10.99.99.1 10.99.99.2
route 192.168.100.0 255.255.255.0
tls-server

dh /etc/openvpn/easy-rsa/pki/dh.pem
ca /etc/openvpn/easy-rsa/pki/ca.crt
cert /etc/openvpn/easy-rsa/pki/issued/server.crt
key /etc/openvpn/easy-rsa/pki/private/server.key

comp-lzo
keepalive 10 60

verb 3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;sudo systemctl enable --now openvpn-server@servidor&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;cliente-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cliente-2&#34;&gt;#&lt;/a&gt; Cliente&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;sudo apt update
sudo apt install openvpn
sudo mv &amp;#123;ca.crt,clientevpn.crt,clientevpn.key&amp;#125; /etc/openvpn/client
sudo chown root: /etc/openvpn/client/*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora vamos a crear el fichero /etc/openvpn/client/cliente.conf&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dev tun
remote 10.0.0.1
ifconfig 10.99.99.2 10.99.99.1
route 192.168.200.0 255.255.255.0
tls-client

ca /etc/openvpn/client/ca.crt
cert /etc/openvpn/client/clientevpn.crt
key /etc/openvpn/client/clientevpn.key

comp-lzo
keepalive 10 60

verb 3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;sudo systemctl enable --now openvpn-client@cliente&lt;/p&gt;
&lt;h2 id=&#34;cliente-1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cliente-1&#34;&gt;#&lt;/a&gt; Cliente 1&lt;/h2&gt;
&lt;p&gt;sudo ip route del default&lt;br&gt;
sudo ip route add default via 192.168.200.1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/vpn-cliente2-traceroute.png&#34; alt=&#34;Descripción de la imagen&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/images/vpn-cliente1.png&#34; alt=&#34;Descripción de la imagen&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;cliente-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cliente-2&#34;&gt;#&lt;/a&gt; Cliente 2&lt;/h2&gt;
&lt;p&gt;sudo ip route del default&lt;br&gt;
sudo ip route add default via 192.168.100.1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/vpn-cliente2-traceroute.png&#34; alt=&#34;Descripción de la imagen&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/images/vpn-cliente2.png&#34; alt=&#34;Descripción de la imagen&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
