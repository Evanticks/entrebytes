<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Configurar un entorno DNS con vistas.</title>
      <link href="/2023/01/10/dns-vistas/"/>
      <url>/2023/01/10/dns-vistas/</url>
      
        <content type="html"><![CDATA[<h2 id="Vistas-en-DNS"><a href="#Vistas-en-DNS" class="headerlink" title="Vistas en DNS"></a>Vistas en DNS</h2><p>Instalaremos un servidor DNS en charlie, de tal forma que todos los nombres de las máquinas deben tener resolución unas con otras al preguntar a charlie.</p><p><img src="/images/Untitled-2023-01-10-0143.png" alt="Descripción de la imagen"></p><p>Las vistas sirven para que cada máquina en un entorno pueda ver las correspondientes salidas a nombres que se hallan dentro del entorno, para esto debemos hacer una configuración en el &#x2F;etc&#x2F;bind&#x2F;named.conf.local, que quedaría de la siguiente manera:</p><pre><code>view interna &#123;    match-clients &#123; 192.168.0.0/24; 127.0.0.1; &#125;;    allow-recursion &#123; any; &#125;;        zone &quot;antonio.gonzalonazareno.org&quot;         &#123;               type master;               file &quot;db.interna.antonio.gonzalonazareno.org&quot;;        &#125;;        zone &quot;0.168.192.in-addr.arpa&quot;         &#123;               type master;               file &quot;db.0.168.192&quot;;        &#125;;        include &quot;/etc/bind/zones.rfc1918&quot;;        include &quot;/etc/bind/named.conf.default-zones&quot;;&#125;;view externa &#123;    match-clients &#123; 172.22.0.0/16; 192.168.202.2; 172.29.0.0/16;&#125;;    allow-recursion &#123; any; &#125;;        zone &quot;antonio.gonzalonazareno.org&quot;         &#123;               type master;               file &quot;db.externa.antonio.gonzalonazareno.org&quot;;        &#125;;        include &quot;/etc/bind/zones.rfc1918&quot;;        include &quot;/etc/bind/named.conf.default-zones&quot;;&#125;;view dmz &#123;    match-clients &#123; 172.16.0.0/16; &#125;;    allow-recursion &#123; any; &#125;;        zone &quot;antonio.gonzalonazareno.org&quot;         &#123;               type master;               file &quot;db.dmz.antonio.gonzalonazareno.org&quot;;        &#125;;        zone &quot;16.172.in-addr.arpa&quot;         &#123;               type master;               file &quot;db.16.172&quot;;        &#125;;        include &quot;/etc/bind/zones.rfc1918&quot;;        include &quot;/etc/bind/named.conf.default-zones&quot;;&#125;;</code></pre><p>Por cada rango de ips, tenemos una vista, ¿por qué tenemos 5 vistas? pues la respuesta sería la siguiente:</p><ul><li>La vista interna que será la vista que tendrán alfa, charlie y delta que contendrá 192.168.0.0</li><li>La vista externa que será la que se muestre al exterior con 172.22.0.0</li><li>La vista dmz que tendrá a bravo con 172.16.0.0</li><li>Tanto la vista dmz como la interna tendrán respuesta sobre resoluciones inversas, pero en la externa no la tenemos, esto es debido a que no debemos proporcionar más información de la esencial a las preguntas desde la vista externa, ya que proviene del exterior y por tanto es menos seguro.</li></ul><p>Una vez creada las zonas debemos crear los ficheros en &#x2F;var&#x2F;cache&#x2F;bind&#x2F;</p><h2 id="Zona-externa"><a href="#Zona-externa" class="headerlink" title="Zona externa:"></a>Zona externa:</h2><pre><code>$TTL    86400@       IN      SOA     alfa.antonio.gonzalonazareno.org. root.antonio.gonzalonazareno.org. (                              1         ; Serial                         604800         ; Refresh                          86400         ; Retry                        2419200         ; Expire                          86400 )       ; Negative Cache TTL;@       IN      NS              alfa.antonio.gonzalonazareno.org.$ORIGIN antonio.gonzalonazareno.org.alfa                    IN      A               172.22.200.193dns                     IN      CNAME           alfawww                     IN      CNAME           alfa</code></pre><p>Como podemos ver, hay varios cname, esto significa que en las preguntas dns que se realizarán desde el exterior a alfa, la respuesta sería tanto que alfa es el dns como el www, ya que no hay que proporcionar la información del interior.</p><h2 id="Zona-interna"><a href="#Zona-interna" class="headerlink" title="Zona interna:"></a>Zona interna:</h2><pre><code>$TTL    86400@       IN      SOA     charlie.antonio.gonzalonazareno.org. root.antonio.gonzalonazareno.org. (                              1         ; Serial                         604800         ; Refresh                          86400         ; Retry                        2419200         ; Expire                          86400 )       ; Negative Cache TTL;@       IN      NS              charlie.antonio.gonzalonazareno.org.$ORIGIN antonio.gonzalonazareno.org.alfa                    IN      A               192.168.0.1bravo                   IN      A               172.16.0.200charlie                 IN      A               192.168.0.2delta                   IN      A               192.168.0.3bd                      IN      CNAME           deltadns                     IN      CNAME           charliewww                     IN      CNAME           bravo</code></pre><p>Ahora en la vista interna podemos ver la información de las ip de las máquinas ya que es un entorno de producción seguro.</p><h2 id="Zona-interna-inversa"><a href="#Zona-interna-inversa" class="headerlink" title="Zona interna inversa:"></a>Zona interna inversa:</h2><pre><code>$TTL    86400@       IN      SOA     charlie.antonio.gonzalonazareno.org. root.antonio.gonzalonazareno.org. (                              1         ; Serial                         604800         ; Refresh                          86400         ; Retry                        2419200         ; Expire                          86400 )       ; Negative Cache TTL;@       IN      NS              charlie.antonio.gonzalonazareno.org.$ORIGIN 0.168.192.in-addr.arpa.1                       IN      PTR             alfa.antonio.gonzalonazareno.org.2                       IN      PTR             charlie.antonio.gonzalonazareno.org.3                       IN      PTR             delta.antonio.gonzalonazareno.org.</code></pre><p>Es importante el ‘.’ después del nombre del fdqn de la máquina ya que si no lo hacemos lo concatenará en la resolución con la ip inversa.</p><h2 id="Zona-DMZ"><a href="#Zona-DMZ" class="headerlink" title="Zona DMZ:"></a>Zona DMZ:</h2><pre><code>$TTL    86400@       IN      SOA     charlie.antonio.gonzalonazareno.org. root.antonio.gonzalonazareno.org. (                              1         ; Serial                         604800         ; Refresh                          86400         ; Retry                        2419200         ; Expire                          86400 )       ; Negative Cache TTL;@       IN      NS              charlie.antonio.gonzalonazareno.org.$ORIGIN antonio.gonzalonazareno.org.alfa                    IN      A               172.16.0.1bravo                   IN      A               172.16.0.200charlie                 IN      A               192.168.0.2delta                   IN      A               192.168.0.3bd                      IN      CNAME           deltadns                     IN      CNAME           charliewww                     IN      CNAME           bravo</code></pre><p>La diferencia que podemos apreciar de esta vista es que alfa posee el gateway 172.16.0.1, que es la que verá bravo.</p><h2 id="Zona-DMZ-inversa"><a href="#Zona-DMZ-inversa" class="headerlink" title="Zona DMZ inversa:"></a>Zona DMZ inversa:</h2><pre><code>$TTL    86400@       IN      SOA     charlie.antonio.gonzalonazareno.org. root.antonio.gonzalonazareno.org. (                              1         ; Serial                         604800         ; Refresh                          86400         ; Retry                        2419200         ; Expire                          86400 )       ; Negative Cache TTL;@       IN      NS              charlie.antonio.gonzalonazareno.org.$ORIGIN 16.172.in-addr.arpa.0.200                   IN      PTR             bravo.antonio.gonzalonazareno.org</code></pre><p>Una vez hecho esto debemos hacer systemctl restart bind9 y comprobamos que no haya errores de sintaxis, después podemos porbar a realizar consultas con dig.</p><p>Ahora una vez realizadas las configuraciones, podemos jugar un poco con esto! y es que por ejemplo si tenemos una base de datos en delta y el cliente de esta base de datos está en bravo, podemos entrar poniendo el cname que especificamos en el dns.</p><p><img src="/images/prueba-dns-mysql.png" alt="Descripción de la imagen"></p><p>Y si en el caso que en el &#x2F;etc&#x2F;resolv.conf ponemos un search con el nombre del dominio <code>search antonio.gonzalonazareno.org</code> pues no haría falta especificar siquiera el dominio, como en el siguiente ejemplo:</p><p><img src="/images/prueba-dns-mysql2.png" alt="Descripción de la imagen"></p><p>Por último dejamos la web de alfa que realmente estará alojada en bravo:</p><p><img src="/images/web-alfa.png" alt="Descripción de la imagen"></p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>Si queremos servir una web que está en un servidor que no pasa por alfa pero no es alfa, debemos poner una regla de iptables que nos permita dirigir el tráfico por el puerto que especifiquemos a bravo, para poder así acceder desde fuera.</p><p>Si necesitamos acceder a este entorno desde un servidor dns que lo controle, debemos editar el archivo &#x2F;etc&#x2F;bind&#x2F;named.conf.options</p><pre><code> forwarders &#123;      192.168.202.2; &#125;;</code></pre>]]></content>
      
      
      <categories>
          
          <category> Servicios de Red e Internet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Servicios de Red e Internet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Montaje de volumen nfs a partir de systemd</title>
      <link href="/2023/01/03/nfs-systemd/"/>
      <url>/2023/01/03/nfs-systemd/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/systemd-title.jpg" alt="status"></p><p>Vamos a empezar en la máquina servidor, que en nuestro caso será alfa, actualizamos el sistema e instalamos los paquetes necesarios para la instalación nfs en la máquina servidora que en nuestro caso será alfa.</p><pre><code>apt install nfs-kernel-server nfs-common</code></pre><p>Tras esto vamos a ingresar el nuevo volumen, en el escenario podría ser tanto físico como virtualizado, pero antes de realizar la configuración de systemd necesitaremos darle formato al sistema de archivos, que en nuestro caso será ext4.</p><p><code>mkfs.ext4 /dev/vdb</code></p><p>Una vez hecho esto podemos crear el archivo en &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;srv-compartida.mount, es necesario que pongamos la ruta en la que va a estar la carpeta compartida a partir de ‘-‘ en vez de ‘&#x2F;‘ en el nombre del fichero a crear, .mount indica a systemd que es un archivo de montaje.</p><p>Ahora vamos a ver la sintaxis del archivo:</p><pre><code>[Unit]Description= volumen que va a ser montado para compartir nfs[Mount]What= /dev/vdbWhere= /srv/compartida/Type=ext4Options=defaults[Install]WantedBy=multi-user.target</code></pre><p>En [Unit] podemos poner la descripción de lo que va a realizar el servicio<br>En [Mount] es como una forma diferente de poner una línea del fstab, ya que se especifica el qué se va a montar, donde se va a montar, el tipo de archivo que va a ser y sus propias opciones de montaje.<br>En [Install] especificamos los usuarios a los que va a ser dirigido este servicio.</p><p>Una vez hecho esto vamos a ejecutar <code>systemctl enable srv-compartida.mount</code> para activar el servicio permanentemente y <code>systemctl start srv-compartida.mount</code> para iniciarlo.</p><p>Tras esto si hacemos systemctl status srv-compartida podemos ver que está activo el servicio</p><p><img src="/images/systemd-1.png" alt="status"></p><p>Ahora vamos a configurar el servidor nfs, en el cual debemos escribir la siguiente línea en el archivo de &#x2F;etc&#x2F;exports, pero antes debe estar creada la carpeta compartida.</p><p><code>/srv/compartida 172.16.0.200(rw,sync,no_subtree_check,all_squash)</code></p><p>luego ejecutamos <code>exportfs -a</code> para que el servicio nfs lea el fichero de &#x2F;etc&#x2F;exports.</p><p>Ahora vamos a pasar a la máquina cliente:</p><p>crearemos la carpeta en &#x2F;srv&#x2F;nfs y escribiremos en el archivo de &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;srv-nfs.mount lo siguiente:</p><pre><code>[Unit]Description= Montaje de carpeta compartida NFS  [Mount]What=172.16.0.1:/srv/compartidaWhere=/srv/nfsType=nfsOptions=defaults[Install]WantedBy=multi-user.target</code></pre><p>Y tras esto:</p><pre><code>systemctl enable srv-nfs.mountsystemctl start srv-nfs.mount</code></pre><p>Ahora podemos comprobar que el servicio permanece activo:</p><p><img src="/images/systemd-2.png" alt="status"></p><p>Y vemos con un archivo de prueba que el servidor nfs funciona:</p><p><img src="/images/systemd-3.png" alt="nfs"></p>]]></content>
      
      
      <categories>
          
          <category> Sistemas Operativos </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Configurar un servidor DNS.</title>
      <link href="/2022/12/13/dns/"/>
      <url>/2022/12/13/dns/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/obelix-4.jpg" alt="Descripción de la imagen"></p><h2 id="Servidor-maestro"><a href="#Servidor-maestro" class="headerlink" title="Servidor maestro"></a>Servidor maestro</h2><p>Primero comenzaremos actualizando el sistema e instalando el servidor dns bind9, la máquina deberá tener un nombre full qualificated como en mi caso que sería <strong>dns1.antonio.org</strong></p><p><code>apt update &amp;&amp; apt install bind9 -y</code></p><p>Vamos a forzar la salida de las peutciones por ipv4, ya que al no estar configurado de esta forma pueden perderse paquetes al tratar de viajar a través de ipv6, esto lo haremos en &#x2F;etc&#x2F;default&#x2F;named, especificando esta sentencia en  <code>OPTIONS=&quot;-4 -f -u bind&quot;</code>.</p><p>Primero debemos permitir el tráfico desde las diferentes ip en el fichero &#x2F;etc&#x2F;bind&#x2F;named.conf.options.</p><pre><code>allow-query &#123;172.29.0.0/16; 172.22.0.0/16;&#125;;allow-transfer &#123; none ;&#125;;</code></pre><p>Allow-query se encargará de permitir las consultas a través de los distintos rangos de ip, yo al estar conectado a una vpn debo poner también ese rango para así poder realizar las consultas desde casa.</p><p>Allow-transfer none hará que no se realicen transpasos completos en la información de la zona, esto nos permitirá que no podamos exponer información sensible dentro del servidor dns al realizar las consultas con dig.</p><p>Tras esto, comenzaremos editando el fichero de configuración de zonas, el cual se encargará de administrar las plantillas a las que se les va a realizar una consulta dns con dig.</p><p>&#x2F;etc&#x2F;bind&#x2F;named.conf.local</p><pre><code class="shell">include &quot;/etc/bind/zones.rfc1918&quot;;zone &quot;antonio.org&quot; &#123;    type master;    file &quot;db.antonio.org&quot;;    allow-transfer &#123; 172.22.7.171; &#125;;    notify yes;&#125;;zone &quot;22.172.in-addr.arpa&quot; &#123;    type master;    file &quot;db.172.22.0.0&quot;;    allow-transfer &#123; 172.22.7.171; &#125;;    notify yes;&#125;;</code></pre><p>Nuestra zona será antonio.org, el cual tendrá el fichero db.antonio.org, hasta ahí será necesario para ralizar solo un dns, para realizar el dns respaldado por un esclavo necesitaremos conceder el traspaso a la ip 172.22.7.171 que será la ip de la máquina esclava, más abajo nos econtraremos con el fichero de zona de resolución inversa, el cual tendrá el nombre del rango de ip que abarcará, y la misma transferencia de zona y el notify que será lo que avise al esclavo que ha habido un cambio en el maestro.</p><p>Si nos vamos al fichero &#x2F;var&#x2F;cache&#x2F;bind&#x2F;db.antonio.org podemos ver los siguientes componentes:</p><pre><code class="shell">$TTL    86400@       IN      SOA     dns1.antonio.org. root.antonio.org. (                              6         ; Serial                         604800         ; Refresh                          86400         ; Retry                        2419200         ; Expire                          86400 )       ; Negative Cache TTL;@       IN      NS              dns1.antonio.org.@       IN      NS              dns2.antonio.org.@       IN      MX      10      correo.antonio.org.$ORIGIN antonio.org.dns1                    IN      A       172.22.7.155dns2                    IN      A       172.22.7.171correo                  IN      A       172.22.200.101asterix                 IN      A       172.22.200.102obelix                  IN      A       172.22.200.103prueba                  IN      A       172.22.200.120www                     IN      CNAME   asterix;informatica             IN      CNAME   asterixftp                     IN      CNAME   obelixentrebytes              IN      A       172.22.200.166$ORIGIN informatica.antonio.org.@       IN      NS    dnsdns     IN      A     172.22.7.177</code></pre><p>Pues bien, deberemos cumplimentar de la siguiente forma el fichero, el cual tiene las siguientes definiciones:<br>La primera parte es el SOA, que es fdqn de la máquina maestra, acompañado del correo del administrador, el cual será con puntos.</p><p>En la segunda parte podemos ver los nameservers, el cual tendrá el @, esto mostrará las máquinas a disposición del fdqn que hemos elegido, en nuestro caso tendremos el de la máquina maestra, la del esclavo y la del correo.</p><p>Origin es la variable que va a tener antonio.org. para no tener que repetir continuamente el nombre del dominio en los registros.</p><p>Los registros de tipo A tendrán una ip asociada, estos se encargan de darle nombre a la ip de dentro del dominio, como dns1 que tiene una 172.22.7.155 o la del esclavo, que tendrá la 172.22.7.171</p><p>Los registros de tipo CNAME son nombres relacionados a otros nombres, como por ejemplo ftp, que va relacionado al nombre obelix y que tendrá la ip 172.22.200.103. entonces al realizar la consulta en el apartado ANSWER nos daría el nombre completo al que está asociado.</p><p><img src="/images/obelix.png" alt="Descripción de la imagen"></p><p>Ahora vamos con el fichero de zona de resolución inversa, el cual crearemos en &#x2F;var&#x2F;cache&#x2F;bind&#x2F;db.172.22.0.0</p><pre><code class="shell">$TTL    86400@       IN      SOA     dns1.antonio.org. root.antonio.org. (                              1         ; Serial                         604800         ; Refresh                          86400         ; Retry                        2419200         ; Expire                          86400 )       ; Negative Cache TTL;@      IN      NS              dns1.antonio.org.@      IN      NS              dns2.antonio.org.$ORIGIN 22.172.in-addr.arpa.155.7                  IN      PTR             dns1.antonio.org.171.7                  IN      PTR             dns2.antonio.org.101.200                IN      PTR             correo.antonio.org.102.200                IN      PTR             asterix.antonio.org.200.103                IN      PTR             obelix.antonio.org.200.166                IN      PTR             entrebytes.antonio.org.</code></pre><p>El fichero es muy similar al de la resolución directa, pero en este caso especificaremos la IP de la manera opuesta, con PTR conseguiremos obtener el nombre gracias a una petición inversa a la ip que hemos configurado, también pondremos la del servidor esclavo.</p><p><img src="/images/obelix-2.png" alt="Descripción de la imagen"></p><p>Por último, debemos editar el fichero &#x2F;etc&#x2F;bind&#x2F;zones.rfc1918 que se encarga de proporcionar la plantilla empty para las resoluciones no configuradas, de manera que debamos comentar el rango de ips de <code>//zone &quot;22.172.in-addr.arpa&quot;  &#123; type master; file &quot;/etc/bind/db.empty&quot;; &#125;;</code> ya que nosotros hemos configurado anteriormente.</p><p>ahora solo nos queda realizar un <code>systemctl restart bind9</code> y <code>systemctl status bind9</code> para comprobar de que el servicio está activo y sin errores.</p><h2 id="Servidor-esclavo"><a href="#Servidor-esclavo" class="headerlink" title="Servidor esclavo"></a>Servidor esclavo</h2><p>Primero comenzaremos actualizando el sistema e instalando el servidor dns bind9, la máquina deberá tener un nombre full qualificated como en mi caso que sería <strong>dns2.antonio.org</strong></p><p><code>apt update &amp;&amp; apt install bind9 -y</code></p><p>Vamos a forzar la salida de las peutciones por ipv4, ya que al no estar configurado de esta forma pueden perderse paquetes al tratar de viajar a través de ipv6, esto lo haremos en &#x2F;etc&#x2F;default&#x2F;named, especificando esta sentencia en  <code>OPTIONS=&quot;-4 -f -u bind&quot;</code>.</p><p>&#x2F;etc&#x2F;bind&#x2F;named.conf.local</p><pre><code class="shell">include &quot;/etc/bind/zones.rfc1918&quot;;zone &quot;antonio.org&quot; &#123;    type slave;    file &quot;db.antonio.org&quot;;    masters &#123; 172.22.7.155; &#125;;&#125;;zone &quot;22.172.in-addr.arpa&quot; &#123;    type slave;    file &quot;db.172.22.0.0&quot;;    masters &#123; 172.22.7.155; &#125;;&#125;;</code></pre><p>Hacemos un <code>systemctl restart bind9</code> y <code>systemctl status bind9</code> para comprobar de que el servicio está activo y sin errores.</p><p>Tras esto, cuando modifiquemos el servidor maestro subimos el serial de tal forma que sea mayor al de la máquina esclava, y de esta manera realizará la transferencia.</p><p><img src="/images/obelix-3.png" alt="Descripción de la imagen"></p><h2 id="Delegacion-de-subdominio"><a href="#Delegacion-de-subdominio" class="headerlink" title="Delegación de subdominio"></a>Delegación de subdominio</h2><p>Pra delegar un subdominio primero comenzaremos actualizando el sistema e instalando el servidor dns bind9, la máquina deberá tener un nombre full qualificated como en mi caso que sería <strong>dns.informatica.antonio.org</strong></p><p><code>apt update &amp;&amp; apt install bind9 -y</code></p><p>Vamos a forzar la salida de las peutciones por ipv4, ya que al no estar configurado de esta forma pueden perderse paquetes al tratar de viajar a través de ipv6, esto lo haremos en &#x2F;etc&#x2F;default&#x2F;named, especificando esta sentencia en  <code>OPTIONS=&quot;-4 -f -u bind&quot;</code>.</p><p>Una vez hecho esto, como podemos ver en la máquina maestra, tenemos un apartado en db.antonio.org en el cual especificamos los siguientes parámetros:</p><pre><code class="shell">$ORIGIN informatica.antonio.org.@       IN      NS    dnsdns     IN      A     172.22.7.177</code></pre><p>Con esto estaremos delegando el subdominio para que lo gestione dns.informatica.antonio.org, si nos vamos a esta máquina, debemos configurar el dominio de la siguiente forma:</p><p>&#x2F;etc&#x2F;bind&#x2F;named.conf.local</p><pre><code>zone &quot;informatica.antonio.org&quot; &#123;    type master;    file &quot;db.informatica.antonio.org&quot;;&#125;;</code></pre><p>Luego nos vamos a &#x2F;var&#x2F;cache&#x2F;bind&#x2F;db.informatica.antonio.org</p><pre><code class="shell">$TTL    86400@       IN      SOA     dns.informatica.antonio.org. root.informatica.antonio.org. (                              1         ; Serial                         604800         ; Refresh                          86400         ; Retry                        2419200         ; Expire                          86400 )       ; Negative Cache TTL;@       IN      NS              dns.informatica.antonio.org.@       IN      MX      10      mail.informatica.antonio.org.$ORIGIN informatica.antonio.org.dns                     IN      A               172.22.7.177mail                    IN      A               172.22.7.177web                     IN      A               172.22.7.177www                     IN      CNAME           webentrebytes              IN      CNAME           web</code></pre><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>Si realizamos cambios a veces no se verán reflejados ya que el servicio DNS la almacena en caché, para borrarla necesitaremos ejecutar <code>rndc flush</code> en la máquina maestra.</p><p>Para poder realizar las consultas sin especificar la ip a través de @, necesitaremos agregar un nameserver XXX.XXX.XXX.XXX en &#x2F;etc&#x2F;resolv.conf</p><p>En el caso de dns.informatica.antonio.org no es necesario descomentar el include “&#x2F;etc&#x2F;bind&#x2F;zones.rfc1918”; ya que se ocupará de gestionarlo la máquina maestra.</p><p>Para detectar con información más detallada los errores de plantillas db, necesitaremos ejecutar <code>named-checkzone antonio.org /var/cache/bind/db.antonio.org</code></p><p>Si queremos detectar los errores del fichero de zonas, necesitaremos ejecutar <code>named-checkconf</code></p>]]></content>
      
      
      <categories>
          
          <category> Servicios de Red e Internet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Servicios de Red e Internet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Procedimientos en Oracle y Postgres</title>
      <link href="/2022/12/07/plsql_basico/"/>
      <url>/2022/12/07/plsql_basico/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/oraclepostgres.jpg" alt="remoto"></p><h2 id="ORACLE"><a href="#ORACLE" class="headerlink" title="ORACLE"></a>ORACLE</h2><p>Comenzaremos adjuntando el script de creación de tablas e inserciones de Oracle:</p><pre><code class="sql">CREATE TABLE DEPT( DEPTNO NUMBER(2), DNAME VARCHAR2(14), LOC VARCHAR2(13), CONSTRAINT PK_DEPT PRIMARY KEY (DEPTNO));CREATE TABLE EMP( EMPNO NUMBER(4), ENAME VARCHAR2(10), JOB VARCHAR2(9), MGR NUMBER(4), HIREDATE DATE, SAL NUMBER(7, 2), COMM NUMBER(7, 2), DEPTNO NUMBER(2), CONSTRAINT FK_DEPTNO FOREIGN KEY (DEPTNO) REFERENCES DEPT (DEPTNO), CONSTRAINT PK_EMP PRIMARY KEY (EMPNO));INSERT INTO DEPT VALUES (10, &#39;ACCOUNTING&#39;, &#39;NEW YORK&#39;);INSERT INTO DEPT VALUES (20, &#39;RESEARCH&#39;, &#39;DALLAS&#39;);INSERT INTO DEPT VALUES (30, &#39;SALES&#39;, &#39;CHICAGO&#39;);INSERT INTO DEPT VALUES (40, &#39;OPERATIONS&#39;, &#39;BOSTON&#39;);INSERT INTO EMP VALUES(7369, &#39;SMITH&#39;, &#39;CLERK&#39;, 7902,TO_DATE(&#39;17-DIC-1980&#39;, &#39;DD-MON-YYYY&#39;), 800, NULL, 20);INSERT INTO EMP VALUES(7499, &#39;ALLEN&#39;, &#39;SALESMAN&#39;, 7698,TO_DATE(&#39;20-FEB-1981&#39;, &#39;DD-MON-YYYY&#39;), 1600, 300, 30);INSERT INTO EMP VALUES(7521, &#39;WARD&#39;, &#39;SALESMAN&#39;, 7698,TO_DATE(&#39;22-FEB-1981&#39;, &#39;DD-MON-YYYY&#39;), 1250, 500, 30);INSERT INTO EMP VALUES(7566, &#39;JONES&#39;, &#39;MANAGER&#39;, 7839,TO_DATE(&#39;2-ABR-1981&#39;, &#39;DD-MON-YYYY&#39;), 2975, NULL, 20);INSERT INTO EMP VALUES(7654, &#39;MARTIN&#39;, &#39;SALESMAN&#39;, 7698,TO_DATE(&#39;28-SEP-1981&#39;, &#39;DD-MON-YYYY&#39;), 1250, 1400, 30);INSERT INTO EMP VALUES(7698, &#39;BLAKE&#39;, &#39;MANAGER&#39;, 7839,TO_DATE(&#39;1-MAY-1981&#39;, &#39;DD-MON-YYYY&#39;), 2850, NULL, 30);INSERT INTO EMP VALUES(7782, &#39;CLARK&#39;, &#39;MANAGER&#39;, 7839,TO_DATE(&#39;9-JUN-1981&#39;, &#39;DD-MON-YYYY&#39;), 2450, NULL, 10);INSERT INTO EMP VALUES(7788, &#39;SCOTT&#39;, &#39;ANALYST&#39;, 7566,TO_DATE(&#39;09-DIC-1982&#39;, &#39;DD-MON-YYYY&#39;), 3000, NULL, 20);INSERT INTO EMP VALUES(7839, &#39;KING&#39;, &#39;PRESIDENT&#39;, NULL,TO_DATE(&#39;17-NOV-1981&#39;, &#39;DD-MON-YYYY&#39;), 5000, NULL, 10);INSERT INTO EMP VALUES(7844, &#39;TURNER&#39;, &#39;SALESMAN&#39;, 7698,TO_DATE(&#39;8-SEP-1981&#39;, &#39;DD-MON-YYYY&#39;), 1500, 0, 30);INSERT INTO EMP VALUES(7876, &#39;ADAMS&#39;, &#39;CLERK&#39;, 7788,TO_DATE(&#39;12-ENE-1983&#39;, &#39;DD-MON-YYYY&#39;), 1100, NULL, 20);INSERT INTO EMP VALUES(7900, &#39;JAMES&#39;, &#39;CLERK&#39;, 7698,TO_DATE(&#39;3-DIC-1981&#39;, &#39;DD-MON-YYYY&#39;), 950, NULL, 30);INSERT INTO EMP VALUES(7902, &#39;FORD&#39;, &#39;ANALYST&#39;, 7566,TO_DATE(&#39;3-DIC-1981&#39;, &#39;DD-MON-YYYY&#39;), 3000, NULL, 20);INSERT INTO EMP VALUES(7934, &#39;MILLER&#39;, &#39;CLERK&#39;, 7782,TO_DATE(&#39;23-ENE-1982&#39;, &#39;DD-MON-YYYY&#39;), 1300, NULL, 10);COMMIT;</code></pre><h3 id="1-Hacer-un-procedimiento-que-muestre-el-nombre-y-el-salario-del-empleado-cuyo-codigo-es-7082"><a href="#1-Hacer-un-procedimiento-que-muestre-el-nombre-y-el-salario-del-empleado-cuyo-codigo-es-7082" class="headerlink" title="1. Hacer un procedimiento que muestre el nombre y el salario del empleado cuyo código es 7082"></a>1. Hacer un procedimiento que muestre el nombre y el salario del empleado cuyo código es 7082</h3><pre><code class="sql">create or replace procedure mostrar_7082IS    v_nombre emp.ename%type;    v_sal emp.sal%type;BEGIN    select ename,sal into v_nombre,v_sal     from emp    where empno= 7782;    dbms_output.put_line(&#39;El nombre del empleado 7082 es &#39; || v_nombre || &#39; y su salario es &#39; || v_sal );END;/</code></pre><p><img src="/images/oracle-ejercicio1.png" alt="remoto"></p><h3 id="2-Hacer-un-procedimiento-que-reciba-como-parametro-un-codigo-de-empleado-y-devuelva-su-nombre"><a href="#2-Hacer-un-procedimiento-que-reciba-como-parametro-un-codigo-de-empleado-y-devuelva-su-nombre" class="headerlink" title="2. Hacer un procedimiento que reciba como parámetro un código de empleado y devuelva su nombre"></a>2. Hacer un procedimiento que reciba como parámetro un código de empleado y devuelva su nombre</h3><pre><code class="sql">Create or replace procedure codigoanombreemp (p_codempleado emp.empno%type)IS    v_nombre emp.ename%type;BEGIN    select ename into v_nombre from emp where empno=p_codempleado;    dbms_output.put_line (&#39;El empleado con el código &#39; || p_codempleado || &#39; es &#39; || v_nombre);END;/</code></pre><p><img src="/images/oracle-ejercicio2.png" alt="remoto"></p><h3 id="3-Hacer-un-procedimiento-que-devuelva-los-nombres-de-los-tres-empleados-mas-antiguos"><a href="#3-Hacer-un-procedimiento-que-devuelva-los-nombres-de-los-tres-empleados-mas-antiguos" class="headerlink" title="3. Hacer un procedimiento que devuelva los nombres de los tres empleados más antiguos"></a>3. Hacer un procedimiento que devuelva los nombres de los tres empleados más antiguos</h3><pre><code class="sql">create or replace procedure tresempleadosmasantiguosIScursor c_empleados isselect ename from emp WHERE ROWNUM &lt;= 3 order by hiredate asc;BEGINFOR v_empleados in c_empleados loop    dbms_output.put_line (v_empleados.ename);end loop;END;/</code></pre><p><img src="/images/oracle-ejercicio5.png" alt="remoto"></p><h3 id="4-Hacer-un-procedimiento-que-reciba-el-nombre-de-un-tablespace-y-muestre-los-nombres-de-los-usuarios-que-lo-tienen-como-tablespace-por-defecto-Vista-DBA-USERS"><a href="#4-Hacer-un-procedimiento-que-reciba-el-nombre-de-un-tablespace-y-muestre-los-nombres-de-los-usuarios-que-lo-tienen-como-tablespace-por-defecto-Vista-DBA-USERS" class="headerlink" title="4. Hacer un procedimiento que reciba el nombre de un tablespace y muestre los nombres de los usuarios que lo tienen como tablespace por defecto (Vista DBA_USERS)"></a>4. Hacer un procedimiento que reciba el nombre de un tablespace y muestre los nombres de los usuarios que lo tienen como tablespace por defecto (Vista DBA_USERS)</h3><pre><code class="sql">create or replace procedure tablespacedefecto (p_tablespace DBA_USERS.DEFAULT_TABLESPACE%type)IScursor c_tablespace isSELECT USERNAME from DBA_USERS where DEFAULT_TABLESPACE=p_tablespace;BEGINFOR v_usuarios in c_tablespace loop    dbms_output.put_line (v_usuarios.USERNAME);end loop;END;/</code></pre><p><img src="/images/oracle-ejercicio3.png" alt="remoto"></p><h3 id="5-Modificar-el-procedimiento-anterior-para-que-haga-lo-mismo-pero-devolviendo-el-numero-de-usuarios-que-tienen-ese-tablespace-como-tablespace-por-defecto-Nota-Hay-que-convertir-el-procedimiento-en-funcion"><a href="#5-Modificar-el-procedimiento-anterior-para-que-haga-lo-mismo-pero-devolviendo-el-numero-de-usuarios-que-tienen-ese-tablespace-como-tablespace-por-defecto-Nota-Hay-que-convertir-el-procedimiento-en-funcion" class="headerlink" title="5. Modificar el procedimiento anterior para que haga lo mismo pero devolviendo el número de usuarios que tienen ese tablespace como tablespace por defecto. Nota: Hay que convertir el procedimiento en función"></a>5. Modificar el procedimiento anterior para que haga lo mismo pero devolviendo el número de usuarios que tienen ese tablespace como tablespace por defecto. Nota: Hay que convertir el procedimiento en función</h3><pre><code class="sql">create or replace function tablespacedefecto (p_tablespace DBA_USERS.DEFAULT_TABLESPACE%type)return numberISv_num number (4);BEGINSELECT count(USERNAME) into v_num from DBA_USERS where DEFAULT_TABLESPACE=p_tablespace;return v_num;END;/create or replace procedure mostrarfunciontablespacedefecto (p_tablespace DBA_USERS.DEFAULT_TABLESPACE%type)isv_num number;BEGIN    v_num:=tablespacedefecto(p_tablespace);    dbms_output.put_line (&#39;El tablespace &#39; || p_tablespace || &#39; lo tienen &#39; || v_num || &#39; usuarios.&#39;);end;/</code></pre><p><img src="/images/oracle-ejercicio4.png" alt="remoto"></p><h3 id="6-Hacer-un-procedimiento-llamado-mostrar-usuarios-por-tablespace-que-muestre-por-pantalla-un-listado-de-los-tablespaces-existentes-con-la-lista-de-usuarios-de-cada-uno-y-el-numero-de-los-mismos-asi-Vistas-DBA-TABLESPACES-y-DBA-USERS"><a href="#6-Hacer-un-procedimiento-llamado-mostrar-usuarios-por-tablespace-que-muestre-por-pantalla-un-listado-de-los-tablespaces-existentes-con-la-lista-de-usuarios-de-cada-uno-y-el-numero-de-los-mismos-asi-Vistas-DBA-TABLESPACES-y-DBA-USERS" class="headerlink" title="6. Hacer un procedimiento llamado mostrar_usuarios_por_tablespace que muestre por pantalla un listado de los tablespaces existentes con la lista de usuarios de cada uno y el número de los mismos, así: (Vistas DBA_TABLESPACES y DBA_USERS)"></a>6. Hacer un procedimiento llamado mostrar_usuarios_por_tablespace que muestre por pantalla un listado de los tablespaces existentes con la lista de usuarios de cada uno y el número de los mismos, así: (Vistas DBA_TABLESPACES y DBA_USERS)</h3><p>En  este ejercicio en concreto utilizaremos una función creada en el anterior ejercicio para este propósito.</p><pre><code class="sql">create or replace procedure mostrar_usuarios_por_tablespaceiscursor c_tablespace isselect DISTINCT DEFAULT_TABLESPACE from DBA_USERS;BEGINfor v_tablespace in c_tablespace loopdbms_output.put_line(&#39;Tablespace &#39; || v_tablespace.DEFAULT_TABLESPACE || &#39;:&#39;);MOSTRARUSUARIOS(v_tablespace.DEFAULT_TABLESPACE);dbms_output.put_line(&#39;Total Usuarios Tablespace &#39;|| v_tablespace.DEFAULT_TABLESPACE || &#39;: &#39; || tablespacedefecto(v_tablespace.DEFAULT_TABLESPACE));end loop;end;/CREATE OR REPLACE PROCEDURE MOSTRARUSUARIOS (p_tablespace in out varchar2)iscursor c_nombre isselect USERNAME FROM DBA_USERS WHERE DEFAULT_TABLESPACE=p_tablespace;BEGINFOR v_nombre in c_nombre loop    dbms_output.put_line(&#39;Usuario &#39; || v_nombre.USERNAME );end loop;end;/</code></pre><p><img src="/images/oracle-ejercicio6.png" alt="remoto"></p><h3 id="7-Hacer-un-procedimiento-llamado-mostrar-codigo-fuente-que-reciba-el-nombre-de-otro-procedimiento-y-muestre-su-codigo-fuente-DBA-SOURCE"><a href="#7-Hacer-un-procedimiento-llamado-mostrar-codigo-fuente-que-reciba-el-nombre-de-otro-procedimiento-y-muestre-su-codigo-fuente-DBA-SOURCE" class="headerlink" title="7. Hacer un procedimiento llamado mostrar_codigo_fuente  que reciba el nombre de otro procedimiento y muestre su código fuente. (DBA_SOURCE)"></a>7. Hacer un procedimiento llamado mostrar_codigo_fuente  que reciba el nombre de otro procedimiento y muestre su código fuente. (DBA_SOURCE)</h3><pre><code class="sql">create or replace procedure mostrar_codigo_fuente (p_procedimiento varchar2)IScursor c_fuente isselect text from DBA_SOURCE where NAME=p_procedimiento;BEGINFOR v_fuente in c_fuente loop    dbms_output.put_line(v_fuente.text);end loop;end;/</code></pre><p><img src="/images/oracle-ejercicio7.png" alt="remoto"></p><h3 id="8-Hacer-un-procedimiento-llamado-mostrar-privilegios-usuario-que-reciba-el-nombre-de-un-usuario-y-muestre-sus-privilegios-de-sistema-y-sus-privilegios-sobre-objetos-DBA-SYS-PRIVS-y-DBA-TAB-PRIVS"><a href="#8-Hacer-un-procedimiento-llamado-mostrar-privilegios-usuario-que-reciba-el-nombre-de-un-usuario-y-muestre-sus-privilegios-de-sistema-y-sus-privilegios-sobre-objetos-DBA-SYS-PRIVS-y-DBA-TAB-PRIVS" class="headerlink" title="8. Hacer un procedimiento llamado mostrar_privilegios_usuario que reciba el nombre de un usuario y muestre sus privilegios de sistema y sus privilegios sobre objetos. (DBA_SYS_PRIVS y DBA_TAB_PRIVS)"></a>8. Hacer un procedimiento llamado mostrar_privilegios_usuario que reciba el nombre de un usuario y muestre sus privilegios de sistema y sus privilegios sobre objetos. (DBA_SYS_PRIVS y DBA_TAB_PRIVS)</h3><pre><code class="sql">CREATE OR REPLACE PROCEDURE mostrar_privilegios_usuario (p_usuario DBA_USERS.USERNAME%TYPE)iscursor c_sistema isSELECT GRANTEE,PRIVILEGE FROM DBA_SYS_PRIVS WHERE GRANTEE=p_usuario;cursor c_objeto isSELECT GRANTEE,PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE=p_usuario;BEGINFOR v_sistema in c_sistema loop    dbms_output.put_line(&#39;Privilegio de sistema: &#39; || v_sistema.PRIVILEGE);end loop;FOR v_objeto in c_objeto loop    dbms_output.put_line(&#39;Privilegiode objetos: &#39; || v_objeto.PRIVILEGE);end loop;END;/</code></pre><p><img src="/images/oracle-ejercicio8.png" alt="remoto"></p><h3 id="9-Realiza-un-procedimiento-llamado-listar-comisiones-que-nos-muestre-por-pantalla-un-listado-de-las-comisiones-de-los-empleados-agrupados-segun-la-localidad-donde-esta-ubicado-su-departamento-con-el-siguiente-formato"><a href="#9-Realiza-un-procedimiento-llamado-listar-comisiones-que-nos-muestre-por-pantalla-un-listado-de-las-comisiones-de-los-empleados-agrupados-segun-la-localidad-donde-esta-ubicado-su-departamento-con-el-siguiente-formato" class="headerlink" title="9. Realiza un procedimiento llamado listar_comisiones que nos muestre por pantalla un listado de las comisiones de los empleados agrupados según la localidad donde está ubicado su departamento con el siguiente formato:"></a>9. Realiza un procedimiento llamado listar_comisiones que nos muestre por pantalla un listado de las comisiones de los empleados agrupados según la localidad donde está ubicado su departamento con el siguiente formato:</h3><pre><code class="sql">CREATE OR REPLACE PROCEDURE Listar_comisionesIScursor c_localidad isselect dname,loc from dept;v_total number(5);BEGINselect sum(comm) into v_total from emp; FOR v_localidad in c_localidad loop    dbms_output.put_line(&#39;Localidad: &#39; || v_localidad.loc);    dbms_output.put_line(&#39;Departamento: &#39; || v_localidad.dname);    MOSTRARCOMISIONES(v_localidad.loc);end loop;dbms_output.put_line(&#39;Total comisiones en la empresa es de: &#39; || v_total);exceptionWHEN NO_DATA_FOUND thendbms_output.put_line(&#39;Hay tablas vacías&#39;);end;/CREATE OR REPLACE PROCEDURE MOSTRARCOMISIONES (p_localidad in out varchar2)IScursor c_comisiones isselect ename,comm from emp where deptno in (select deptno from dept where loc = p_localidad);v_total number(5);BEGINselect sum(comm) into v_total from emp where deptno in  (select deptno from dept where loc = p_localidad);FOR v_empleado in c_comisiones loop    dbms_output.put_line(&#39;Empleado: &#39; || v_empleado.ename || &#39;..................&#39; || v_empleado.comm);    if v_empleado.comm &gt; 10000 then        raise_application_error(-20001,&#39;Hay algún empleado con más de 10.000 de comisión&#39;);    end if;end loop;dbms_output.put_line(&#39;Total comisiones departamento: &#39; || p_localidad || &#39; es de: &#39; || v_total);END;/</code></pre><p>Podemos ver en la imagen que se produce un raise ya que hay un usuario con más de 10.000 de comm.</p><p><img src="/images/oracle-ejercicio9.png" alt="remoto"></p><h3 id="10-Realiza-un-procedimiento-que-reciba-el-nombre-de-una-tabla-y-muestre-los-nombres-de-las-restricciones-que-tiene-a-que-columna-afectan-y-en-que-consisten-exactamente-DBA-TABLES-DBA-CONSTRAINTS-DBA-CONS-COLUMNS"><a href="#10-Realiza-un-procedimiento-que-reciba-el-nombre-de-una-tabla-y-muestre-los-nombres-de-las-restricciones-que-tiene-a-que-columna-afectan-y-en-que-consisten-exactamente-DBA-TABLES-DBA-CONSTRAINTS-DBA-CONS-COLUMNS" class="headerlink" title="10. Realiza un procedimiento que reciba el nombre de una tabla y muestre los nombres de las restricciones que tiene, a qué columna afectan y en qué consisten exactamente. (DBA_TABLES, DBA_CONSTRAINTS, DBA_CONS_COLUMNS)"></a>10. Realiza un procedimiento que reciba el nombre de una tabla y muestre los nombres de las restricciones que tiene, a qué columna afectan y en qué consisten exactamente. (DBA_TABLES, DBA_CONSTRAINTS, DBA_CONS_COLUMNS)</h3><pre><code class="sql">SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,SEARCH_CONDITION_VC FROM DBA_CONSTRAINTS WHERE TABLE_NAME=&#39;EQUIPAR&#39;;SELECT CONSTRAINT_NAME,COLUMN_NAME FROM DBA_CONS_COLUMNS WHERE TABLE_NAME = &#39;PERSONAJE&#39;;CREATE OR REPLACE PROCEDURE MOSTRARRESTRICCIONES (p_tabla varchar2)isv_tabla varchar2(50);BEGINv_tabla:=p_tabla;MOSTRARCONSSYS (v_tabla);MOSTRARCONSTABS (v_tabla);end;/CREATE OR REPLACE PROCEDURE MOSTRARCONSSYS (p_tabla in out varchar2)IScursor c_system isSELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,SEARCH_CONDITION_VC FROM DBA_CONSTRAINTS WHERE TABLE_NAME=p_tabla;BEGINFOR v_system in c_system loop    dbms_output.put_line(v_system.CONSTRAINT_NAME || &#39;Tipo de restricción: &#39; || v_system.CONSTRAINT_TYPE || v_system.SEARCH_CONDITION_VC);end loop;END;/CREATE OR REPLACE PROCEDURE MOSTRARCONSTABS (p_tabla in out varchar2)IScursor c_tabs isSELECT CONSTRAINT_NAME,COLUMN_NAME FROM DBA_CONS_COLUMNS WHERE TABLE_NAME = p_tabla;BEGINFOR v_tabs in c_tabs loop    dbms_output.put_line(&#39;Restricción: &#39; || v_tabs.CONSTRAINT_NAME || &#39; y la columna a la que hace referencia es: &#39; || v_tabs.COLUMN_NAME);end loop;END;/</code></pre><p><img src="/images/oracle-ejercicio10.png" alt="remoto"></p><h2 id="POSTGRESQL"><a href="#POSTGRESQL" class="headerlink" title="POSTGRESQL"></a>POSTGRESQL</h2><p>Comenzaremos adjuntando el script de creación de tablas e inserciones de Postgres:</p><pre><code class="sql">create table dept(  deptno   decimal(2,0) not null,  dname    varchar(14),  loc      varchar(13));create table emp(  empno    decimal(4,0) not null,  ename    varchar(10),  job      varchar(9),  mgr      decimal(4,0),  hiredate date,  sal      decimal(7,2),  comm     decimal(7,2),    deptno   decimal(2,0) not null);create table bonus(  ename    varchar(10),  job      varchar(9),  sal      decimal,  comm     decimal);create table salgrade(  grade    decimal,  losal    decimal,  hisal    decimal);create table dummy (  dummy    decimal);insert into dummy values (0);insert into DEPT (DEPTNO, DNAME, LOC)  select 10, &#39;ACCOUNTING&#39;, &#39;NEW YORK&#39; from dummy union all  select 20, &#39;RESEARCH&#39;,   &#39;DALLAS&#39;   from dummy union all  select 30, &#39;SALES&#39;,      &#39;CHICAGO&#39;  from dummy union all  select 40, &#39;OPERATIONS&#39;, &#39;BOSTON&#39;   from dummy;insert into emp (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)  select 7839, &#39;KING&#39;,   &#39;PRESIDENT&#39;, cast(null as integer), to_date(&#39;17-11-1981&#39;,&#39;dd-mm-yyyy&#39;),    5000, cast(null as integer), 10 from dummy union all  select 7698, &#39;BLAKE&#39;,  &#39;MANAGER&#39;,   7839, to_date(&#39;1-5-1981&#39;,&#39;dd-mm-yyyy&#39;),      2850, cast(null as integer), 30 from dummy union all  select 7782, &#39;CLARK&#39;,  &#39;MANAGER&#39;,   7839, to_date(&#39;9-6-1981&#39;,&#39;dd-mm-yyyy&#39;),      2450, cast(null as integer), 10 from dummy union all  select 7566, &#39;JONES&#39;,  &#39;MANAGER&#39;,   7839, to_date(&#39;2-4-1981&#39;,&#39;dd-mm-yyyy&#39;),      2975, cast(null as integer), 20 from dummy union all  select 7788, &#39;SCOTT&#39;,  &#39;ANALYST&#39;,   7566, to_date(&#39;13-7-87&#39;,&#39;dd-mm-rr&#39;) - 85,  3000, cast(null as integer), 20 from dummy union all  select 7902, &#39;FORD&#39;,   &#39;ANALYST&#39;,   7566, to_date(&#39;3-12-1981&#39;,&#39;dd-mm-yyyy&#39;),     3000, cast(null as integer), 20 from dummy union all  select 7369, &#39;SMITH&#39;,  &#39;CLERK&#39;,     7902, to_date(&#39;17-12-1980&#39;,&#39;dd-mm-yyyy&#39;),     800, cast(null as integer), 20 from dummy union all  select 7499, &#39;ALLEN&#39;,  &#39;SALESMAN&#39;,  7698, to_date(&#39;20-2-1981&#39;,&#39;dd-mm-yyyy&#39;),     1600,  300, 30 from dummy union all  select 7521, &#39;WARD&#39;,   &#39;SALESMAN&#39;,  7698, to_date(&#39;22-2-1981&#39;,&#39;dd-mm-yyyy&#39;),     1250,  500, 30 from dummy union all  select 7654, &#39;MARTIN&#39;, &#39;SALESMAN&#39;,  7698, to_date(&#39;28-9-1981&#39;,&#39;dd-mm-yyyy&#39;),     1250, 1400, 30 from dummy union all  select 7844, &#39;TURNER&#39;, &#39;SALESMAN&#39;,  7698, to_date(&#39;8-9-1981&#39;,&#39;dd-mm-yyyy&#39;),      1500,    0, 30 from dummy union all  select 7876, &#39;ADAMS&#39;,  &#39;CLERK&#39;,     7788, to_date(&#39;13-7-87&#39;, &#39;dd-mm-rr&#39;) - 51, 1100, cast(null as integer), 20 from dummy union all  select 7900, &#39;JAMES&#39;,  &#39;CLERK&#39;,     7698, to_date(&#39;3-12-1981&#39;,&#39;dd-mm-yyyy&#39;),      950, cast(null as integer), 30 from dummy union all  select 7934, &#39;MILLER&#39;, &#39;CLERK&#39;,     7782, to_date(&#39;23-1-1982&#39;,&#39;dd-mm-yyyy&#39;),     1300, cast(null as integer), 10 from dummy;insert into salgrade  select 1,  700, 1200 from dummy union all  select 2, 1201, 1400 from dummy union all  select 3, 1401, 2000 from dummy union all  select 4, 2001, 3000 from dummy union all  select 5, 3001, 9999 from dummy;commit;</code></pre><h3 id="1-Hacer-un-procedimiento-que-muestre-el-nombre-y-el-salario-del-empleado-cuyo-codigo-es-7082-1"><a href="#1-Hacer-un-procedimiento-que-muestre-el-nombre-y-el-salario-del-empleado-cuyo-codigo-es-7082-1" class="headerlink" title="1. Hacer un procedimiento que muestre el nombre y el salario del empleado cuyo código es 7082"></a>1. Hacer un procedimiento que muestre el nombre y el salario del empleado cuyo código es 7082</h3><pre><code class="sql">CREATE or replace PROCEDURE mostrar_7082() AS $$DECLARE    v_nombre emp.ename%type;    v_salario emp.sal%type;BEGIN    select ename,sal into v_nombre,v_salario from emp where empno=7782;    RAISE NOTICE &#39;El nombre del empleado es %, y su salario es %&#39;, v_nombre,v_salario;END;$$ LANGUAGE plpgsql;</code></pre><p><img src="/images/postgres-ejercicio2.png" alt="remoto"></p><h3 id="2-Hacer-un-procedimiento-que-reciba-como-parametro-un-codigo-de-empleado-y-devuelva-su-nombre-1"><a href="#2-Hacer-un-procedimiento-que-reciba-como-parametro-un-codigo-de-empleado-y-devuelva-su-nombre-1" class="headerlink" title="2. Hacer un procedimiento que reciba como parámetro un código de empleado y devuelva su nombre"></a>2. Hacer un procedimiento que reciba como parámetro un código de empleado y devuelva su nombre</h3><pre><code class="sql">Create or replace procedure codigoanombreemp (p_codempleado emp.empno%type) AS $$DECLARE    v_nombre emp.ename%type;BEGIN    select ename into v_nombre from emp where empno=p_codempleado;    RAISE NOTICE &#39;El empleado con el código %, es %&#39;, p_codempleado,v_nombre;END;$$ LANGUAGE plpgsql;</code></pre><p><img src="/images/postgres-ejercicio1.png" alt="remoto"></p>]]></content>
      
      
      <categories>
          
          <category> Bases de Datos </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Configurar kernel a medida</title>
      <link href="/2022/11/16/Compilar-linux-a-medida/"/>
      <url>/2022/11/16/Compilar-linux-a-medida/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/linux-6.0.jpg" alt="Descripción de la imagen"></p><p>Comenzaremos creando una carpeta que nos sirva de entorno de trabajo</p><p><code>mkdir kernel &amp;&amp; cd kernel</code></p><p>Instalamos las dependencias que nos ayudarán a compilar el kernel, el cual nos ahorrará errores en la compilación:</p><p><code>sudo apt install build-essential flex nbison openssl libssl-dev dkms libncurses-dev ncurses-dev qtbase5-dev libelf-dev</code></p><p>Nos vamos ahora a kernel.org a descargarnos la última versión del kernel de linux.</p><p>Una vez descargado el kernel lo descomprimimos con el comando tar -xvf linux-6.0.7.tar.gz, ingresamos dentro y vemos que entre muchos archivos, encontramos un makefile, entramos dentro y encontraremos el archivo EXTRAVERSION, el cual pondremos una versión para poder llevar un control de versiones.</p><p>Entramos dentro del directorio descomprimido y procedemos a generar el <code>make oldconfig</code> que creará el archivo .config con los módulos que deberemos compilar, intentamos contestar a las preguntas de forma negativa para que no genere módulos opcionales.</p><p>Una vez hecho esto debemos de adaptar los módulos que está utilizando nuestra máquina para compilar el kernel a medida, entonces utilizaremos un <code>make localyesconfig</code></p><pre><code>╭─antonio@debian ~/Programas/kernel/linux-6.0.7  ╰─➤  egrep &#39;=y&#39; .config | wc -l                                                                                                 130 ↵1934╭─antonio@debian ~/Programas/kernel/linux-6.0.7  ╰─➤  egrep &#39;=m&#39; .config | wc -l3</code></pre><p>Una vez hecho esto procederemos a probar nuestro kernel a medida <code>make -j8 bindeb-pkg</code> pudiendo así compilar el kernel, le otorgaremos 8 jobs y si agregamos un time <code>time make -j8 bindeb-pkg</code> podemos ver la duración que ha tardado el sistema en compilarlo.</p><p>Reiniciamos nuestra máquina y entramos en el nuevo kernel, utilizamos <code>uname -r</code></p><p>Luego volvemos a nuestro kernel, y en concreto a nuestro espacio de trabajo, ejecutamos un <code>make clean</code> para eliminar los ‘residuos’ generados tras al compilación, y hacemos un control de versiones del .config, como nos funcionó la primera versión realizamos un <code>cp .config ../v1.config</code></p><p><img src="/images/xconfig.png" alt="Descripción de la imagen"></p>]]></content>
      
      
      <categories>
          
          <category> Sistemas Operativos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sistemas Operativos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Interconexiones entre Bases de Datos</title>
      <link href="/2022/11/09/Interconexiones/"/>
      <url>/2022/11/09/Interconexiones/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/oracle-19c-logo.png" alt="remoto"></p><h2 id="Interconexion-entre-dos-bases-de-datos-Oracle"><a href="#Interconexion-entre-dos-bases-de-datos-Oracle" class="headerlink" title="Interconexión entre dos bases de datos Oracle."></a>Interconexión entre dos bases de datos Oracle.</h2><p>Antes que nada debemos saber que para conectarnos a una base de datos, debemos tener activados los listener y seguidamente tener en el tsnames.ora la base de datos a la que queremos conectarnos, de esta manera:<br>sudo nano &#x2F;opt&#x2F;oracle&#x2F;product&#x2F;19c&#x2F;dbhome_1&#x2F;network&#x2F;admin&#x2F;tnsnames.ora</p><pre><code>ORCLCDB =  (DESCRIPTION =    (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.122.20)(PORT = 1521))    (CONNECT_DATA =      (SERVER = DEDICATED)      (SERVICE_NAME = ORCLCDB)    )  )LISTENER_ORCLCDB =  (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.122.20)(PORT = 1521))ORACLESERV =  (DESCRIPTION =    (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.122.168)(PORT = 1521))    (CONNECT_DATA =      (SERVER = DEDICATED)      (SERVICE_NAME = ORCLCDB)    )  )</code></pre><p>Hemos creado una nueva conexión llamada ORACLESERV en el cual procederemos a ingresar la ip del servidor del que queremos recibir los datos, tras esto debemos crear en la otra máquina la tabla de ejemplo que queremos extraer:</p><pre><code>CREATE TABLE armas (codarma varchar2 (3),nombre varchar2 (20),fuerza number (2),destreza number (2),inteligencia number (2),rareza varchar2 (10),nivel number (2),CONSTRAINT pk_armas PRIMARY KEY (codarma));insert into armas values (&#39;001&#39;,&#39;Espada Corta&#39;,8,10,0,&#39;D&#39;,5);insert into armas values (&#39;002&#39;,&#39;Espada Larga&#39;,10,10,0,&#39;C&#39;,8);insert into armas values (&#39;003&#39;,&#39;Espada Artorias&#39;,24,18,20,&#39;S&#39;,30);insert into armas values (&#39;004&#39;,&#39;Hacha de Mano&#39;,8,8,0,&#39;D&#39;,6);insert into armas values (&#39;005&#39;,&#39;Hacha de Gárgola&#39;,14,14,0,&#39;A&#39;,15);insert into armas values (&#39;006&#39;,&#39;Hacha de Demonio&#39;,46,0,0,&#39;S&#39;,40);</code></pre><p>Una vez hecho esto, <strong>nos vamos a la máquina en la que vamos a trabajar con la consulta</strong>, debemos crear un enlace a la base de datos, el cual hemos predefinido como ORACLESERV:</p><p><code>create database link ORACLESERVIDOR connect to antonio identified by antonio using &#39;ORACLESERV&#39;;</code></p><p>Tras esto, viene una parte un poco compleja, ya que la tabla que vamos a consultar en el otro servidor viene relacionada, y a la hora de crear relaciones entre tablas no se puede especificar una base de datos remota en el DDL, entonces, cómo podemos hacer que esto funcione? bueno pues mi idea ha sido crear una vista materializada:</p><p><code>create materialized view mv_armas as select codarma from armas@ORACLESERVIDOR;</code></p><p>Una vez hecho esto, procedemos a crear las tablas personaje y equipar, siendo una relación N,M.</p><pre><code>CREATE TABLE personaje (codpersonaje varchar2 (3),nombre varchar2 (15),altura number (3,2),peso number (3),raza varchar2 (10),CONSTRAINT pk_codpersonaje PRIMARY KEY (codpersonaje),CONSTRAINT ck_codpersonaje CHECK (REGEXP_LIKE(codpersonaje,&#39;^1.*$&#39;)));insert into personaje values (&#39;101&#39;,&#39;Solaire&#39;,1.70,80,&#39;humano&#39;);insert into personaje values (&#39;102&#39;,&#39;Artorias&#39;,1.90,90,&#39;hueco&#39;);insert into personaje values (&#39;103&#39;,&#39;Gargola&#39;,3.10,680,&#39;Gárgola&#39;);CREATE TABLE equipar (codpersonaje varchar2 (3),codarma varchar2 (3),fecha date,CONSTRAINT pk_equipar PRIMARY KEY (codpersonaje,codarma,fecha),CONSTRAINT fk_codpersonaje FOREIGN KEY (codpersonaje) REFERENCES personaje (codpersonaje),CONSTRAINT fk_codarma FOREIGN KEY (codarma) REFERENCES mv_armas(codarma););insert into equipar values (&#39;102&#39;,&#39;003&#39;,to_date(&#39;2011/02/11&#39;,&#39;YYYY/MM/DD&#39;));insert into equipar values (&#39;103&#39;,&#39;005&#39;,to_date(&#39;2011/05/04&#39;,&#39;YYYY/MM/DD&#39;));insert into equipar values (&#39;101&#39;,&#39;002&#39;,to_date(&#39;2011/06/03&#39;,&#39;YYYY/MM/DD&#39;));insert into equipar values (&#39;103&#39;,&#39;002&#39;,to_date(&#39;2011/09/02&#39;,&#39;YYYY/MM/DD&#39;));insert into equipar values (&#39;101&#39;,&#39;006&#39;,to_date(&#39;2011/08/03&#39;,&#39;YYYY/MM/DD&#39;));insert into equipar values (&#39;102&#39;,&#39;004&#39;,to_date(&#39;2011/07/01&#39;,&#39;YYYY/MM/DD&#39;));</code></pre><p>¡¡Mucho ojo!! la restricción que he establecido en equipar, que es la foreign key que relaciona el código de armas con nuestra base de datos, llamará a la view que hemos creado y contendrá los datos de la consulta al servidor externo.</p><p><img src="/images/sql-remoto.png" alt="remoto"></p><p><img src="/images/sql-remoto2.png" alt="remoto"></p><h2 id="Interconexion-entre-dos-bases-de-datos-Postgres"><a href="#Interconexion-entre-dos-bases-de-datos-Postgres" class="headerlink" title="Interconexión entre dos bases de datos Postgres."></a>Interconexión entre dos bases de datos Postgres.</h2><p>Primero vamos a modificar el fichero &#x2F;etc&#x2F;postgresql&#x2F;13&#x2F;main&#x2F;postgresql.conf para abrir la escucha a la ip que quiera conectarse:<br><code>listen_addresses = &#39;*&#39;</code></p><p>Modificamos el fichero &#x2F;etc&#x2F;postgresql&#x2F;13&#x2F;main&#x2F;pg_hba.conf, y aladimos la siguiente línea:<br><code>host    all             all             192.168.122.0/24        md5</code></p><p>Procedemos a reiniciar Postgres para efectuar los cambios:<br><code>sudo systemctl restart postgresql</code></p><p>Luego vamos a crear la base de datos souls, luego vamos a darle permiso al usuario antonio2 para poder manejar la base de datos:</p><pre><code>postgres=# create database soulspostgres-# ;CREATE DATABASEGRANT ALL PRIVILEGES ON DATABASE souls TO antonio2;postgres=# grant connect on database souls to antonio2;GRANTpostgres=# grant usage on schema public to antonio2;GRANT</code></pre><p>En el otro servidor establecemos la configuración de antonio1:</p><pre><code>postgres=# create user antonio1 with password &#39;antonio1&#39;;CREATE ROLEpostgres=# create database souls;CREATE DATABASEGRANT ALL PRIVILEGES ON DATABASE souls TO antonio1;postgres=# grant connect on database souls to antonio1;GRANTpostgres=# grant usage on schema public to antonio1;GRANTpostgres=# \c souls;</code></pre><p>Ahora vamos a instalar el paquete que nos permitirá realizar el dblink:<br><code>sudo apt install postgresql-contrib</code></p><p>De modo que si hacemos una consulta con dblink especificando el host, usuario y base de datos del que se habla, podremos sacar la información de las bases de datos respectivamente.</p><p><code>select * from dblink(&#39;dbname=souls host=192.168.122.168 user=antonio2 password=antonio2&#39;, &#39;select nombre from armas&#39;) as armas (Nombre VARCHAR);</code></p><p><img src="/images/postgres-postgres.png" alt="Descripción de la imagen"></p><h2 id="Interconexion-entre-bases-de-datos-Oracle-y-Postgres"><a href="#Interconexion-entre-bases-de-datos-Oracle-y-Postgres" class="headerlink" title="Interconexión entre bases de datos Oracle y Postgres."></a>Interconexión entre bases de datos Oracle y Postgres.</h2><p>En nuestro caso la paquetería que necesitamos para conectar Oracle a Postgres es la de Debian Bullseye, por tanto el comando sería el siguiente:<br><code>sudo apt install odbc-postgresql unixodbc -y</code></p><p>Ahora vamos a entrar en &#x2F;etc&#x2F;odbc.ini y vamos a ingresar los siguientes parámetros adaptándolos a nuestro usuario, host y base de datos:</p><pre><code>[PSQLA]Debug = 0CommLog = 0ReadOnly = 1Driver = PostgreSQL ANSIServername = 192.168.122.168Username = antonio2Password = antonio2Port = 5432Database = soulsTrace = 0TraceFile = /tmp/sql.log[PSQLU]Debug = 0CommLog = 0ReadOnly = 0Driver = PostgreSQL UnicodeServername = 192.168.122.168Username = antonio2Password = antonio2Port = 5432Database = soulsTrace = 0TraceFile = /tmp/sql.log[Default]Driver = /usr/lib/x86_64-linux-gnu/odbc/liboplodbcS.so</code></pre><p>Ahora vamos a comprobar el fichero &#x2F;etc&#x2F;ocdbinst.ini y debe venir configurado como se muestra abajo.</p><pre><code>[PostgreSQL ANSI]Description=PostgreSQL ODBC driver (ANSI version)Driver=psqlodbca.soSetup=libodbcpsqlS.soDebug=0CommLog=1UsageCount=1[PostgreSQL Unicode]Description=PostgreSQL ODBC driver (Unicode version)Driver=psqlodbcw.soSetup=libodbcpsqlS.soDebug=0CommLog=1UsageCount=1</code></pre><p>Podemos comprobar la configuración ingresando los siguientes comandos:</p><pre><code>odbcinst -q -d    [PostgreSQL ANSI]    [PostgreSQL Unicode]odbcinst -q -s    [PSQLA]    [PSQLU]    [Default]</code></pre><p>ejecutamos <code>isql -v PSQLU</code> y si todo ha ido bien nos devolverá esto:</p><pre><code>+---------------------------------------+| Connected!                            ||                                       || sql-statement                         || help [tablename]                      || quit                                  ||                                       |+---------------------------------------+</code></pre><p>A continuación vamos a <code>/opt/oracle/product/19c/dbhome_1/hs/admin/initPSQLU.ora</code> e ingresamos los siguientes datos:</p><pre><code>HS_FDS_CONNECT_INFO = PSQLUHS_FDS_TRACE_LEVEL = DebugHS_FDS_SHAREABLE_NAME = /usr/lib/x86_64-linux-gnu/odbc/psqlodbcw.soHS_LANGUAGE = AMERICAN_AMERICA.WE8ISO8859P1set ODBCINI=/etc/odbc.ini</code></pre><p>Vamos al listener.ora e ingresamos los siguentes parámetros:</p><pre><code>SID_LIST_LISTENER = (SID_LIST =  (SID_DESC =   (GLOBAL_DBNAME = ORCLCDB)   (ORACLE_HOME = /opt/oracle/product/19c/dbhome_1)   (SID_NAME = ORCLCDB)  )  (SID_DESC =    (SID_NAME = PSQLU)    (PROGRAM = dg4odbc)    (ORACLE_HOME = /opt/oracle/product/19c/dbhome_1)  ) )</code></pre><p>Ahora realizaremos un lsnrctl stop y lisnrctl start, y nos debe salir un mensaje como el siguiente:</p><pre><code>Service &quot;PSQLU&quot; has 1 instance(s).  Instance &quot;PSQLU&quot;, status UNKNOWN, has 1 handler(s) for this service...Service &quot;orcl&quot; has 1 instance(s).  Instance &quot;orcl&quot;, status UNKNOWN, has 1 handler(s) for this service...The command completed successfully</code></pre><p>Ahora nos vamos al tnsnames.ora y añadimos lo siguiente:</p><pre><code>PSQLU = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = localhost)(PORT = 1521))   (CONNECT_DATA = (SID = PSQLU))   (HS = OK)  )</code></pre><p>En localhost estamos especificando que la ip de la máquina sería la misma en la que está alojado el servicio postgre, esto es debido a que se redirecciona a través de la configuración en odbc.ini entonces ya tan solo quedaría conceder permisos de conexión publica de la base de datos a antonio:</p><pre><code>GRANT CREATE PUBLIC DATABASE LINK to antonio;Concesion terminada correctamente.</code></pre><p>Ahora solo nos queda realizar la conexión:</p><pre><code>CREATE PUBLIC DATABASE LINK CONEXIONPOSTGRES2CONNECT TO &quot;antonio2&quot;IDENTIFIED BY &quot;antonio2&quot;USING &#39;PSQLU&#39;;Enlace con la base de datos creado.</code></pre><p>Comprobamos que se pueda consultar el nombre de las armas en <strong>CONEXIONPOSTGRES2</strong></p><p><img src="/images/oracle-postgres.png" alt="Descripción de la imagen"></p><h2 id="Interconexion-entre-bases-de-datos-Postgres-y-Oracle"><a href="#Interconexion-entre-bases-de-datos-Postgres-y-Oracle" class="headerlink" title="Interconexión entre bases de datos Postgres y Oracle."></a>Interconexión entre bases de datos Postgres y Oracle.</h2><p>Primero vamos a instalar unos paquetes que nos servirán tanto para establecer la conexión con Oracle como a la hora de compilar el Makefile que necesitaremos más adelante:</p><p><code>apt install git build-essential libaio1 postgresql-server-dev-all -y</code></p><p>Para realizar la interconexión entre Postgres y Oracle necesitaremos software de terceros, en mi caso vamos a descargar los paquetes que se encuentran en el siguiente enlace:</p><p><a href="https://drive.google.com/file/d/1UmBNjVLffaj-hXDXdi6hPGpz6CIZr8eN/view?usp=share_link">https://drive.google.com/file/d/1UmBNjVLffaj-hXDXdi6hPGpz6CIZr8eN/view?usp=share_link</a></p><p>En él se encuentran los paquetes en formato.deb, del cual me ocupé de transformar con alien.</p><p>Ahora procedemos a instalar los paquetes que adaptarán el formato sqlplus:</p><pre><code>sudo dpkg -i oracle-instantclient19.5-devel_19.5.0.0.0-2_amd64.debsudo dpkg -i oracle-instantclient19.5-basic_19.5.0.0.0-2_amd64.debsudo dpkg -i oracle-instantclient19.5-tools_19.5.0.0.0-2_amd64.debsudo dpkg -i oracle-instantclient19.5-sqlplus_19.5.0.0.0-2_amd64.deb</code></pre><p>Ahora vamos a clonar el repositorio con el que trabajaremos para establecer la conexión de Postgres a Oracle:</p><p>git clone <a href="https://github.com/laurenz/oracle_fdw.git">https://github.com/laurenz/oracle_fdw.git</a></p><p>Ahora en nuestra máquina postgres necesitaremos crear las variables de entorno de Oracle, para ello ingresaremos lo siguiente al final de nuestro .bashrc</p><pre><code>sudo nano ~/.bashrcexport ORACLE_HOME=&quot;/usr/lib/oracle/19.5/client64&quot;export LD_LIBRARY_PATH=&quot;/usr/lib/oracle/19.5/client64/lib&quot;export PATH=$ORACLE_HOME:$PATHexport USE_PGXS=1</code></pre><p>Ahora vamos a generar el makefile ejecutando un <code>make</code> dentro del directorio que hemos clonado.</p><p>UNa vez hecho esto, ante de proceder a instalar el binario, debamo incluir las siguientes líneas a nuestro makefile.</p><pre><code>PG_CPPFLAGS = -I&quot;$(ORACLE_HOME)/sdk/include&quot; -I&quot;$(ORACLE_HOME)/oci/include&quot; -I&quot;$(ORACLE_HOME)/rdbms/public&quot; -I&quot;$(ORACLE_HOME)/&quot; $(FIN&gt;SHLIB_LINK = -L&quot;$(ORACLE_HOME)/&quot; -L&quot;$(ORACLE_HOME)/bin&quot; -L&quot;$(ORACLE_HOME)/lib&quot; -L&quot;$(ORACLE_HOME)/lib/amd64&quot; $(FIND_LDFLAGS) -l$(ORACL&gt;</code></pre><p>Ahora podemos ejecutar un <code>make install</code> sin errores ya que las dependencias necesarias para la instalación fueron descargadas con anterioridad.</p><p>Luego entramos en nuestra base de datos con el usuario postgres para crear nuestro enlace a Oracle, debemos especificar la ip que tendrá el sevidor y el nombre de la base de datos que en nuestro caso será el por defecto ‘ORCLCDB’.</p><pre><code>CREATE SERVER oracleantonio FOREIGN DATA WRAPPER oracle_fdw OPTIONS(dbserver &#39;//192.168.122.168:1521/ORCLCDB&#39;);</code></pre><p>Una vez hecho esto vamos a enlazar la conexión de nuestro oracleantonio con el usuario que tenga acceso a los registros de la tabla armas, de forma que quedaría de la siguiente manera:</p><pre><code>create user mapping for postgres server oracleantonio options(user &#39;antonio&#39;,password &#39;antonio&#39;);DROP user mapping for postgres server oracleantonio; (En caso de que haya algún tipo de error).</code></pre><p>Crearemos el esqueleto de la tabla que necesitamos en la base de datos pero sin restricciones ni unique, ya que colisionan con la ejecución de la conexión remota, solo necesitaremos los campos que vayan a ser rellenados:</p><pre><code>CREATE FOREIGN TABLE personaje (codpersonaje varchar (3),nombre varchar (15),altura numeric (3,2),peso numeric (3),raza varchar (10) DEFAULT (&#39;Humano&#39;))SERVER oracleantonio OPTIONS(schema &#39;ANTONIO&#39;, table &#39;PERSONAJE&#39;);</code></pre><p>Ahora solo nos queda realizar la consulta y podemos comprobar como esta se resuelve con éxito.</p><p><img src="/images/postgres-oracle.png" alt="Descripción de la imagen"></p>]]></content>
      
      
      <categories>
          
          <category> Bases de Datos </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Ansible + Vagrant, configurar y enrutar servidor web.</title>
      <link href="/2022/10/13/Ansible+Vagrant/"/>
      <url>/2022/10/13/Ansible+Vagrant/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/ansibleandvagrant.jpg" alt="Descripción de la imagen"></p><p>Comenzaremos este post viendo como adjuntamos una box <a href="https://app.vagrantup.com/boxes/search">https://app.vagrantup.com/boxes/search</a><br>buscamos por ejemplo la de debian&#x2F;ullseye, vamos a nuestra terminal y escribimos lo siguiente:<br><code>vagrant box add debian/bullseye64</code></p><p>En ese momento se guardará en <code>~/.vagrant.d/boxes</code><br>Bueno, dicho esto procedemos a crear la carpeta donde vamos a trabajar y hacemos un <code>vagrant init</code>, esto hará que se cree un archivo llamado vagrantfile, el cual debe quedar de la siguiente manera:</p><pre><code>Vagrant.configure(&quot;2&quot;) do |config|    config.vm.define :nodo1 do |nodo1|      nodo1.vm.box = &quot;debian/bullseye64&quot;      nodo1.vm.hostname= &quot;nodo1&quot;      nodo1.vm.synced_folder &quot;.&quot;, &quot;/vagrant&quot;, disabled: true      nodo1.vm.network :public_network,        :dev =&gt; &quot;br0&quot;,        :mode =&gt; &quot;bridge&quot;,        :type =&gt; &quot;bridge&quot;,        use_dhcp_assigned_default_route: true      nodo1.vm.network :private_network,        :libvirt__network_name =&gt; &quot;red1&quot;,        :libvirt__dhcp_enabled =&gt; false,        :ip =&gt; &quot;10.0.0.10&quot;,        :libvirt__forward_mode =&gt; &quot;veryisolated&quot;    end    config.vm.define :nodo2 do |nodo2|      nodo2.vm.box = &quot;debian/bullseye64&quot;      nodo2.vm.hostname = &quot;nodo2&quot;      nodo2.vm.synced_folder &quot;.&quot;, &quot;/vagrant&quot;, disabled: true      nodo2.vm.network :private_network,        :libvirt__network_name =&gt; &quot;red1&quot;,        :libvirt__dhcp_enabled =&gt; false,        :ip =&gt; &quot;10.0.0.11&quot;,        :libvirt__forward_mode =&gt; &quot;veryisolated&quot;,        use_dhcp_assigned_default_route: true    endend</code></pre><p>Vamos a explicar paso por paso qué vemos en el código:</p><ul><li>El vagrantfile debe estar perfectamente alineado, los end con sus respectivos config.</li><li>Al ser dos máquinas las vamos a llamar nodo1 y nodo2, que una será el router y la segunda el servidor que aloje apache</li><li>Si nos fijamos con atención podemos ver que <strong>nodo1</strong> tiene dos redes, una será pública, la cual tiene un bridge por donde saldrá a internet, y una red privada muy aislada, la cual no contendrá nada más que una ip estática, pondremos que la ruta por defecto va a ser el bridge que nos llevará a internet.</li><li>En <strong>nodo2</strong> tendremos una red privada, más tarde procederemos a ejecutar unas reglas que nos permitan salir por el exterior a través de la red muy aislada con <strong>nat</strong></li></ul><p>Una vez hecho esto procedemos a ver de cerca lo que contiene Ansible, el cual ejecutaremos tras iniciar las máquinas de Vagrant junto con sus redes.</p><p><img src="/images/Ansible.png" alt="Descripción de la imagen"></p><p>Como podemos ver, hay una serie de carpetas llamadas roles, cada rol va a ejecutar una o varias tareas dependiendo de lo que se trate, por lo tanto así quedaría por ejemplo el activado del bit de forwarding del router:</p><pre><code>- ansible.posix.sysctl:    name: net.ipv4.ip_forward    value: &#39;1&#39;    sysctl_set: yes</code></pre><p>Estas tareas tienen un orden, y se realiza dentro de site.yml:</p><pre><code>- hosts: nodo1  become: true  roles:   - role: copy- hosts: all  become: true  roles:   - role: commons- hosts: nodo2  become: true  roles:   - role: copy2   - role: apache2- hosts: nodo1  become: true  roles:   - role: ipv4</code></pre><p>Con un poco de conocimientos en sistemas podemos ver claramente qué realiza cada rol.</p><p>Ahora vamos a poner la lupa en <code>roles/commons/handlers/main.yaml</code>, una parte muy importante de la ejecución de Ansible:</p><pre><code>- name: reiniciando maquina  ansible.builtin.reboot:    msg: &quot;reboot by Ansible&quot;    pre_reboot_delay: 5    post_reboot_delay: 10    test_command: &quot;whoami&quot;</code></pre><p>Este handler se ejecuta en el momento en el que se hace un llamamiento, en nuestro caso es cuando copiamos al router un fichero configurado para etc&#x2F;network&#x2F;interfaces, con sus interfaces, ruta por defecto e iptables:</p><p><img src="/images/interfaces.png" alt="Descripción de la imagen"></p><p>podemos ver como en <code>roles/copy/tasks/main.yaml</code> hace el llamamiento al <strong>handler</strong> en el notify:</p><pre><code>- name: Copiando al etc/network/interfaces  ansible.builtin.copy:    src: interfaz_nodo1/interfaces    dest: /etc/network/    owner: root    group: root    mode: u-rw,g-wx,o-rwx  notify:    - reiniciando maquina</code></pre><p>A continuación podemos copiar nuestra clave pública a través de la tarea <strong>commons</strong> que será lo que nos permita atravesar por ssh sin utilizar la clave vagrant, es decir, la nuestra.</p><pre><code>- name: Ensure system is updated  apt: update_cache=yes upgrade=yes- name: Set authorized key took from file  authorized_key:    user: vagrant    state: present    key: &quot;&#123;&#123; lookup('file', '/home/antonio/.ssh/id_rsa.pub') &#125;&#125;&quot;</code></pre><p>Luego pasamos a la instalación de Apache,a través del módulo apt para instalar apache2, ports.conf es la configuración de los puertos por los que escucha, también alberga el fichero index.html y una plantilla jinja2.</p><p>Por último pero no menos importante está el fichero hosts, el cual será el inventario por el cual el sistema sabrá cuál será nodo1 y cuál nodo2, a través de las correspondientes ips que asignaremos,el usuario más la clave privada que asignará vagrant:</p><pre><code>all:  children:    servidores_web:      hosts:        nodo1:          ansible_ssh_host: 192.168.121.212          ansible_ssh_user: vagrant          ansible_ssh_private_key_file: ../.vagrant/machines/nodo1/libvirt/private_key        nodo2:          ansible_ssh_host: 192.168.121.111          ansible_ssh_user: vagrant          ansible_ssh_private_key_file: ../.vagrant/machines/nodo2/libvirt/private_key</code></pre><p>con esto solo necesitaremos ejecutar el <code>ansible-playbook site.yaml</code> y tendremos enrutado y configurado nuestro servidor web.</p>]]></content>
      
      
      <categories>
          
          <category> Servicios de Red e Internet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Servicios de Red e Internet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Instalación preseed PXE+APACHE</title>
      <link href="/2022/10/04/Preseed-pxe/"/>
      <url>/2022/10/04/Preseed-pxe/</url>
      
        <content type="html"><![CDATA[<p>Vamos a crear la máquina virtual como hicimos anteriormente en <a href="https://entrebytes.neocities.org/2022/09/30/preseed/">Instalación automatizada basada en medio de almacenamiento extraíble.</a></p><p>En vagrant creamos una máquina que tenga una ip estática 192.168.100.3 que va a ser la tarjeta de red por la que funcionará pxe, en mi caso no creó esa ip y la tuve que escribir a mano en el &#x2F;etc&#x2F;network&#x2F;interfaces, la otra tarjeta de red es la de vagrant-libvirt que será la que nos conecte al exterior.</p><p>Para proceder a configurar el protocolo <strong>TFTP</strong> Y <strong>DHCP</strong> para que sea el host el que conceda ip a la máquina y establezca la conexión al preseed, utilizando dnsmasq</p><p>apt install dnsmasq</p><p>Establecemos en el fichero &#x2F;etc&#x2F;dnsmaq.conf con los siguientes parámetros:</p><p><code>dhcp-range=192.168.100.100,192.168.100.200,255.255.255.0</code></p><p>Establecemos el fichero con  el que va a bootear el dhcp:</p><p><code>dhcp-boot=pxelinux.0</code></p><p>Habilitamos el tftp:<br><code>enable-tftp</code></p><p>Establecemos una ruta donde va a albergar nuestro Debian:<br><code>tftp-root=/srv/tftp</code></p><p>Creamos la carpeta en &#x2F;srv<br><code>sudo mkdir /srv/tftp</code></p><p>a continuación instalamos el wget y lo usamos en &#x2F;srv&#x2F;tftp</p><p><code>wget http://ftp.debian.org/debian/dists/bullseye/main/installer-amd64/current/images/netboot/netboot.tar.gz </code></p><p><code>tar -zxf netboot.tar.gz</code> (para descomprimir los archivos)<br><code>rm netboot.tar.gz</code></p><p><code>srv/tftp/debian-installer/amd64/boot-screens/txt.cfg</code></p><p>En este fichero de configuración utilizamos los siguientes parámetros:</p><pre><code>label install        menu label ^Install        kernel debian-installer/amd64/linux        append vga=788 initrd=debian-installer/amd64/initrd.gz --- quietlabel unattended-gnome        menu label ^Instalacion Debian Desatendida Preseed        kernel debian-installer/amd64/linux        append vga=788 initrd=debian-installer/amd64/initrd.gz hostname=preseed domain=preseed preseed/url=192.168.100.5/preseed.cfg locale=en_US.UTF-8 console-setup/charmap=UTF-8 console-setup/ask_detect=false keyboard-configuration/xkb-keymap=us --</code></pre><p>En este label he puesto la url del servidor apache que vamos a utilizar, para que descargue el preseed y lo inyecte en la instalación.</p><p>Instalamos apache2:<br><code>sudo apt install apache2</code></p><p>luego copiamos el preseed, lo ponemos en <code>/var/www/html/</code> junto al index.html, hacemos la página HTML que albergue el preseed y la ruta ya está establecida en el txt.cfg</p><p>Una vez hecho esto, para que nuestra máquina que se conecta a la tarjeta de red estática que hemos creado, necesitamos establecer unas reglas de nftables que nos ayudará a conseguir que la máquina que conecte con el servidor pxe salga al exterior para descargar las dependencias.</p><p>Para ello, debemos activar el bit de forwarding que se halla en <code>/etc/sysctl.conf</code> y descomentamos <code>#net.ipv4.ip_forward=1</code></p><p>Instalamos y habilitamos nftables(Todo esto siendo root):</p><p><code>apt install nftables</code><br><code>systemctl start nftables.service</code><br><code>systemctl enable nftables.service</code><br><code>nft add table nat</code><br><code>nft list tables</code></p><p>ahora realizamos las reglas de nftables para conseguir que esas máquinas tengan internet:<br><code>nft add chain nat postrouting &#123; type nat hook postrouting priority 100 \; &#125;</code><br><code>nft add rule ip nat postrouting oifname &quot;eth0&quot; ip saddr 192.168.100.0/24 counter masquerade</code></p><p>Ahora guardamos los cambios: <code>nft list ruleset &gt; /etc/nftables.conf</code></p><p>Ahora en virt-manager procedemos a crear y enlazar una máquina a una red aislada:</p><pre><code>&lt;network connections=&quot;2&quot;&gt;  &lt;name&gt;red_muy_aislada&lt;/name&gt;  &lt;uuid&gt;b0083374-5cb6-4a8d-bd3c-32cf0d870b54&lt;/uuid&gt;  &lt;bridge name=&quot;virbr3&quot; stp=&quot;on&quot; delay=&quot;0&quot;/&gt;  &lt;mac address=&quot;52:54:00:e9:be:50&quot;/&gt;&lt;/network&gt;</code></pre><p> debemos arrancarla por red como prioridad, luego de esto funcionará perfectamente nuestra instalación desatendida.</p>]]></content>
      
      
      <categories>
          
          <category> Sistemas Operativos </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Instalación automatizada basada en medio de almacenamiento extraíble.</title>
      <link href="/2022/09/30/preseed/"/>
      <url>/2022/09/30/preseed/</url>
      
        <content type="html"><![CDATA[<p>He comenzado descargando el archivo iso para poder abrirlo y colocar el preseed en él, el comando que he utilizado es xorriso.<br>Tras esto he utilizado una plantilla de la web de debian</p><p><a href="https://www.debian.org/releases/buster/example-preseed.txt">https://www.debian.org/releases/buster/example-preseed.txt</a></p><p>Tras esto he estado configurando preseed.cfg para poner la hora, el país y el teclado en español y resulta que estuve un tiempo estancado en esto porque hay que corroborar los cambios en el archivo isofiles&#x2F;isolinux&#x2F;txt.cfg<br>A su vez también debemos indicar la ruta donde vama a estar el preseed para que el sistema lo localice, en mi caso estará en la raíz de la ISO (CDROM)</p><pre><code>label install        menu label ^Install        kernel /install.amd/vmlinuz        append vga=788 initrd=/install.amd/initrd.gz --- quietlabel unattended-gnome menu label ^Instalación Debian Desatendida Preseed Antonio kernel /install.amd/gtk/vmlinuz append vga=788 initrd=/install.amd/gtk/initrd.gz preseed/file=/cdrom/preseed.cfg locale=es_ES console-setup/ask_detect=false keyboard-configuration/xkb-keymap=es</code></pre><p>Al tener que desensamblar y ensamblar constantemente el iso para poner el preseed actualizado llegó un momento en el que se hacía inviable seguir probando sin hacer un script con los pasos que se repetían, entonces lo realicé:</p><pre><code>#!/usr/bin/env bashfichero=/home/antonio/Descargas/preseed-instalacion/preseed-debian-10.1.0-amd64-script-netinst.isochmod u+w isofilescp preseed.cfg ~/Descargas/preseed-instalacion/isofileschmod u-w isofilescd ~/Descargas/preseed-instalacionchmod a+w isofiles/isolinux/isolinux.binif [ -f $fichero ]then        rm -f $ficherofi      genisoimage -r -J -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -o preseed-debian-10&gt;</code></pre><p>Tuve que meter la condición de que si el iso creado existía lo borrara porque al ejecutar genisoimage si el nombre ya existe provoca conflictos.</p><p>Entonces estuve probando, metiendo el usuario de la máquina con la contraseña sin encriptar, para ver el funcionamiento y que lo anterior configurado fuese por buen camino.</p><p>Estuve probando formas de encriptar la contraseña, la plantilla me recomendaba que usara  <strong>Crypt 3</strong> pero es un método muy vulnerable, así que mirando la documentación vi que podía meter un hash <strong>md5</strong>.</p><p>Entonces empecé a encriptar la contraseña, para ello utilicé <code>mkpasswd -m sha-512</code> el cual al ingresar la contraseña me la devuelve encriptada, activo la opción de <code>d-i passwd/user-password-crypted password</code> junto con la contraseña encriptada</p><p>Ya entonces, con la localización y el teclado en español, la cuenta del usuario con su contraseña encriptada decido comenzar a realizar las particiones de lvm.<br>Tuve muchísimos errores de sintaxis pero gracias al script podía probar de manera más rápida las diferentes combinaciones de particionado y ajustando la sintaxis conseguí realizarlo:</p><p><img src="/images/ASO-PRACTICA1.png" alt="Descripción de la imagen"></p>]]></content>
      
      
      <categories>
          
          <category> Sistemas Operativos </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Compilar en debian</title>
      <link href="/2022/09/30/Compilar-en-debian/"/>
      <url>/2022/09/30/Compilar-en-debian/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/debian-11.jpg" alt="Descripción de la imagen"></p><p>Necesitamos descargar el código fuente de xorriso:<br><code>apt source xorriso</code><br>Nos pide que instalemos dpkg-dev debido a que necesita el paquete dpkg-source<br><code>apt install dpkg-dev</code><br>Con esto al descargar el código fuente de un paquete este se descomprimirá, también podemos hacerlo a través de tar:</p><p><code>tar -xvf libisoburn_1.5.2.orig.tar.gz</code></p><p><img src="/images/xorriso-1.png" alt="Descripción de la imagen"></p><p>nos metemos en la carpeta de xorriso y leemos el archivo.dsc</p><p>Como podemos ver en la imagen dentro del paquete libisoburn está las diferentes dependencias para el binario que queremos compilar.</p><p><img src="/images/xorriso-2.png" alt="Descripción de la imagen"></p><p>Como podemos observar hay dos makefile, pero estos no son más que unas plantillas que no lograremos compilar ya que solo sirven de guía.</p><p>necesitaremos las dependencias así que procuraremos hacer un <code>apt build-dep xorriso</code>.</p><p>Una vez instaladas las dependencias ejecutamos <code>./configure --prefix /usr/local/xorriso/</code>, con esto se habrá generado el makefile, y el binario generado se guardará en &#x2F;usr&#x2F;local&#x2F;xorriso</p><p><img src="/images/xorriso-3.png" alt="Descripción de la imagen"></p><p>Ahora una vez tengamos el archivo del makefile, ejecutamos un <code>make</code> en el directorio del makefile, una vez compilado realizamos un <code>make install</code></p><p><img src="/images/xorriso-4.png" alt="Descripción de la imagen"></p><p>Como podemos ver existe el binario que ejecutaremos y viene incluído el archivo de ayuda.</p><p>Otra forma después de proceder con el make a través de dpkg sería <code>dpkg-buildpackage -b</code>, se creará elarchivo .deb con el que emplearemos <code>dpkg -i archivo.deb</code></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
