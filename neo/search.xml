<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Instalación preseed PXE+APACHE</title>
      <link href="/2022/10/04/Preseed-pxe/"/>
      <url>/2022/10/04/Preseed-pxe/</url>
      
        <content type="html"><![CDATA[<p>Vamos a crear la máquina virtual como hicimos anteriormente en <a href="https://entrebytes.neocities.org/2022/09/30/preseed/">Instalación automatizada basada en medio de almacenamiento extraíble.</a></p><p>En vagrant creamos una máquina que tenga una ip estática 192.168.100.3 que va a ser la tarjeta de red por la que funcionará pxe, en mi caso no creó esa ip y la tuve que escribir a mano en el &#x2F;etc&#x2F;network&#x2F;interfaces, la otra tarjeta de red es la de vagrant-libvirt que será la que nos conecte al exterior.</p><p>Para proceder a configurar el protocolo <strong>TFTP</strong> Y <strong>DHCP</strong> para que sea el host el que conceda ip a la máquina y establezca la conexión al preseed, utilizando dnsmasq</p><p>apt install dnsmasq</p><p>Establecemos en el fichero &#x2F;etc&#x2F;dnsmaq.conf con los siguientes parámetros:</p><p><code>dhcp-range=192.168.100.100,192.168.100.200,255.255.255.0</code></p><p>Establecemos el fichero con  el que va a bootear el dhcp:</p><p><code>dhcp-boot=pxelinux.0</code></p><p>Habilitamos el tftp:<br><code>enable-tftp</code></p><p>Establecemos una ruta donde va a albergar nuestro Debian:<br><code>tftp-root=/srv/tftp</code></p><p>Creamos la carpeta en &#x2F;srv<br><code>sudo mkdir /srv/tftp</code></p><p>a continuación instalamos el wget y lo usamos en &#x2F;srv&#x2F;tftp</p><p><code>wget http://ftp.debian.org/debian/dists/buster/main/installer-amd64/current/images/netboot/netboot.tar.gz </code></p><p><code>tar -zxf netboot.tar.gz</code> (para descomprimir los archivos)<br><code>rm netboot.tar.gz</code></p><p><code>srv/tftp/debian-installer/amd64/boot-screens/txt.cfg</code></p><p>En este fichero de configuración utilizamos los siguientes parámetros:</p><pre><code>label install        menu label ^Install        kernel debian-installer/amd64/linux        append vga=788 initrd=debian-installer/amd64/initrd.gz --- quietlabel unattended-gnome        menu label ^Instalacion Debian Desatendida Preseed        kernel debian-installer/amd64/linux        append vga=788 initrd=debian-installer/amd64/initrd.gz hostname=preseed domain=preseed preseed/url=192.168.100.5/preseed.cfg locale=en_US.UTF-8 console-setup/charmap=UTF-8 console-setup/ask_detect=false keyboard-configuration/xkb-keymap=us --</code></pre><p>En este label he puesto la url del servidor apache que vamos a utilizar, para que descargue el preseed y lo inyecte en la instalación.</p><p>Instalamos apache2:<br><code>sudo apt install apache2</code></p><p>luego copiamos el preseed, lo ponemos en <code>/var/www/html/</code> junto al index.html, hacemos la página HTML que albergue el preseed y la ruta ya está establecida en el txt.cfg</p><p>Una vez hecho esto, para que nuestra máquina que se conecta a la tarjeta de red estática que hemos creado, necesitamos establecer unas reglas de nftables que nos ayudará a conseguir que la máquina que conecte con el servidor pxe salga al exterior para descargar las dependencias.</p><p>Para ello, debemos activar el bit de forwarding que se halla en <code>/etc/sysctl.conf</code> y descomentamos <code>#net.ipv4.ip_forward=1</code></p><p>Instalamos y habilitamos nftables(Todo esto siendo root):</p><p><code>apt install nftables</code><br><code>systemctl start nftables.service</code><br><code>systemctl enable nftables.service</code><br><code>nft add table nat</code><br><code>nft list tables</code></p><p>ahora realizamos las reglas de nftables para conseguir que esas máquinas tengan internet:<br><code>nft add chain nat postrouting &#123; type nat hook postrouting priority 100 \; &#125;</code><br><code>nft add rule ip nat postrouting oifname &quot;eth0&quot; ip saddr 192.168.100.0/24 counter masquerade</code></p><p>Ahora guardamos los cambios: <code>nft list ruleset &gt; /etc/nftables.conf</code></p><p>Ahora en virt-manager procedemos a crear y enlazar una máquina a una red aislada:</p><pre><code>&lt;network connections=&quot;2&quot;&gt;  &lt;name&gt;red_muy_aislada&lt;/name&gt;  &lt;uuid&gt;b0083374-5cb6-4a8d-bd3c-32cf0d870b54&lt;/uuid&gt;  &lt;bridge name=&quot;virbr3&quot; stp=&quot;on&quot; delay=&quot;0&quot;/&gt;  &lt;mac address=&quot;52:54:00:e9:be:50&quot;/&gt;&lt;/network&gt;</code></pre><p> debemos arrancarla por red como prioridad, luego de esto funcionará perfectamente nuestra instalación desatendida.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Instalación automatizada basada en medio de almacenamiento extraíble.</title>
      <link href="/2022/09/30/preseed/"/>
      <url>/2022/09/30/preseed/</url>
      
        <content type="html"><![CDATA[<p>He comenzado descargando el archivo iso para poder abrirlo y colocar el preseed en él, el comando que he utilizado es xorriso.<br>Tras esto he utilizado una plantilla de la web de debian</p><p><a href="https://www.debian.org/releases/buster/example-preseed.txt">https://www.debian.org/releases/buster/example-preseed.txt</a></p><p>Tras esto he estado configurando preseed.cfg para poner la hora, el país y el teclado en español y resulta que estuve un tiempo estancado en esto porque hay que corroborar los cambios en el archivo isofiles&#x2F;isolinux&#x2F;txt.cfg<br>A su vez también debemos indicar la ruta donde vama a estar el preseed para que el sistema lo localice, en mi caso estará en la raíz de la ISO (CDROM)</p><pre><code>label install        menu label ^Install        kernel /install.amd/vmlinuz        append vga=788 initrd=/install.amd/initrd.gz --- quietlabel unattended-gnome menu label ^Instalación Debian Desatendida Preseed Antonio kernel /install.amd/gtk/vmlinuz append vga=788 initrd=/install.amd/gtk/initrd.gz preseed/file=/cdrom/preseed.cfg locale=es_ES console-setup/ask_detect=false keyboard-configuration/xkb-keymap=es</code></pre><p>Al tener que desensamblar y ensamblar constantemente el iso para poner el preseed actualizado llegó un momento en el que se hacía inviable seguir probando sin hacer un script con los pasos que se repetían, entonces lo realicé:</p><pre><code>#!/usr/bin/env bashfichero=/home/antonio/Descargas/preseed-instalacion/preseed-debian-10.1.0-amd64-script-netinst.isochmod u+w isofilescp preseed.cfg ~/Descargas/preseed-instalacion/isofileschmod u-w isofilescd ~/Descargas/preseed-instalacionchmod a+w isofiles/isolinux/isolinux.binif [ -f $fichero ]then        rm -f $ficherofi      genisoimage -r -J -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -o preseed-debian-10&gt;</code></pre><p>Tuve que meter la condición de que si el iso creado existía lo borrara porque al ejecutar genisoimage si el nombre ya existe provoca conflictos.</p><p>Entonces estuve probando, metiendo el usuario de la máquina con la contraseña sin encriptar, para ver el funcionamiento y que lo anterior configurado fuese por buen camino.</p><p>Estuve probando formas de encriptar la contraseña, la plantilla me recomendaba que usara  <strong>Crypt 3</strong> pero es un método muy vulnerable, así que mirando la documentación vi que podía meter un hash <strong>md5</strong>.</p><p>Entonces empecé a encriptar la contraseña, para ello utilicé <code>mkpasswd -m sha-512</code> el cual al ingresar la contraseña me la devuelve encriptada, activo la opción de <code>d-i passwd/user-password-crypted password</code> junto con la contraseña encriptada</p><p>Ya entonces, con la localización y el teclado en español, la cuenta del usuario con su contraseña encriptada decido comenzar a realizar las particiones de lvm.<br>Tuve muchísimos errores de sintaxis pero gracias al script podía probar de manera más rápida las diferentes combinaciones de particionado y ajustando la sintaxis conseguí realizarlo:</p><p><img src="/images/ASO-PRACTICA1.png" alt="Descripción de la imagen"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Compilar en debian</title>
      <link href="/2022/09/30/Compilar-en-debian/"/>
      <url>/2022/09/30/Compilar-en-debian/</url>
      
        <content type="html"><![CDATA[<h2 id="apt-source-lvm2"><a href="#apt-source-lvm2" class="headerlink" title="apt source lvm2"></a>apt source lvm2</h2><p>nos metemos en la carpeta lvm2 y leemos el archivo.dsc<br>luego buscamos el archivo makefile y si no lo tenemos pues hacemos <strong>.&#x2F;configure</strong> , necesitaremos las dependencias así que procuraremos hacer un <code>apt build-dep lvm2</code>,<br>con esto instalará las dependencias, y una vez hecho esto compilamos de dos maneras:</p><ul><li>haciendo un make, una vez compilado realizamos un <code>make install</code></li></ul><p>.&#x2F;configure –prefix &#x2F;srv&#x2F;xorriso&#x2F;</p><ul><li>Otra forma de compilar el código fuente es de esta manera: <code>dpkg-buildpackage -b</code></li></ul><p>para diseccionar un paquete .deb utilizamos <code>ar -x loquesea.deb</code></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
